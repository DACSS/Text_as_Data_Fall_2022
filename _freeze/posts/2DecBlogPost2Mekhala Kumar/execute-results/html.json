{
  "hash": "15c52194ee73febaaff506a734afccc4",
  "result": {
    "markdown": "---\ntitle: \"Blog Post 2 \"\nauthor: \"Mekhala Kumar\"\ndescription: \"Reading in Data and Preprocessing\"\ndate: \"11/15/2022\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - MekhalaKumar\n  - Olympics2020\n  - GenderandSports\n  - BlogPost2\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(quanteda)\n#devtools::install_github(\"quanteda/readtext\") \nlibrary(readtext)\nlibrary(striprtf)\n#library(LexisNexisTools)\nlibrary(corpus)\nlibrary(quanteda.textplots)\n```\n:::\n\n\n# About the Data and Collection Process\n\nI will be looking into how women's and men's sports were described, specifically in the context of the Tokyo Olympics 2020. The data used for this project is a collection of Indian newspaper archives from LexisNexis, from July 22,2021 to August 9, 2021 (as the Olympics were held between 23 July-8 August). I tried a few ways to collect the articles. At first, I tried scraping the Deccan Herald website and then tried scraping the LexisNexis archive. However, I was unable to do so. Hence, I downloaded articles from LexisNexis. The articles were collected after filtering the database. These filters were: Jul 22,2021 to Aug 09,2021, Asia, India, Men's Sports/Women's Sports/Sports Awards, Newspapers/web-based publications, a set of newspapers which were: Hindustan Times, Times of India (Electronic Edition), Free Press Journal (India), The Telegraph (India), Indian Express, Mint, DNA, India Today Online, The Hindu and Economic Times.\n\n# Initial steps \nAt first, I tried reading in the data for one file and looked for the different components present, in order to understand what I needed to extract. \\\nSince, it was causing errors to load the files, I have provided the code of how I read in the files and extracted information as comments.\\\nI have loaded in the data using an R object. \n\n::: {.cell}\n\n```{.r .cell-code}\n#my_texts <- readtext(paste0(\"D:/Text as Data/Files(100) Set 1.rtf\"),text_field = \"texts\")\n#testing <- as.character(my_texts)\n#testing\n#typeof(testing)\n#str_length(testing)\n```\n:::\n\n\n# Components\nThe body of the article is the main text required. In order to extract this, I found the index value of where the body of the text started. Additionally, I collected the index values for the information of the newspaper name, date and classifications.\n\n## 3 issues I noticed while doing this step were:\n1. The titles of each article were not saved when the file was read in.\n2. The dateline which included the location or date was not present for every article. \n3. I had thought of using the index position of nPublished, as it denoted the end of the body of the article. However, this was not present for all the articles. \n\n::: {.cell}\n\n```{.r .cell-code}\n#Components\n#indices_name<-str_locate_all(testing, \"\\n\\n\\n\\n\\n\\n\")%>%unlist()\n#indices_name\n\n#indices_date<-str_locate_all(testing,\"\\nDateline\")\n#indices_date\n\n#For the actual text\n#indices_body<-str_locate_all(testing,\"\\nBody\")%>%unlist()\n#indices_body\n#indices_body_end<-str_locate_all(testing,\"\\nPublished\")%>%unlist()\n#indices_body_end\n\n#Subject and classifications \n#indices_classification<-str_locate_all(testing,\"\\nSubject\")%>%unlist()\n#indices_classification\n\n#Document end\n#indices_end<-str_locate_all(testing,\"\\nEnd of Document\")%>%unlist()\n#indices_end\n```\n:::\n\n# Creating the dataframe for 1 file\nI tried creating a dataframe for the articles in 1 file and faced issues when I tried to separate information such as the few words before the body of the article starts (such as date and location). \n\n::: {.cell}\n\n```{.r .cell-code}\n#df_test <- data.frame(matrix(ncol = 3, nrow = 1191))%>% rename(\n #   Newspaper_Date=X1 ,\n  #  Body=X2,\n  #  Tags=X3\n   # )\n#Testing with a smaller set\n\n#for (i in 1:3){\n # df_test[i,1]<-str_sub(testing,indices_name[i],indices_body[i])\n # df_test[i,2]<-str_sub(testing,indices_body[i],indices_body_end[i])\n  #df_test[i,3]<-str_sub(testing,indices_classification[i],indices_end[i])\n\n#}\n\n\n#df_test<-df_test%>%separate(Newspaper_Date, into=c(\"Newspaper_Date\", \"Delete\"), sep=\"Copyright\")%>%select(-Delete)\n\n#for (i in 1:100){\n# df[i,1]<-str_sub(testing,indices_name[i],indices_body[i])\n# df[i,2]<-str_sub(testing,indices_body[i],indices_classification[i])\n# df[i,3]<-str_sub(testing,indices_classification[i],indices_end[i])\n# }\n#\\nPublished not there everywhere so did not work\n#for (i in 1:100){\n # df[i,1]<-str_sub(testing,indices_name[i],indices_body[i])\n  #df[i,2]<-str_sub(testing,indices_body[i],indices_classification[i])\n  #df[i,3]<-str_sub(testing,indices_classification[i],indices_end[i])\n#}\n```\n:::\n\n\n# Reading all the files\nThis reads in the entire collection of files. The rest of the post works with the data from all the files. \\\n\n::: {.cell}\n\n```{.r .cell-code}\n#my_text1 <- readtext(paste0(\"Data/Files(100) Set 1.rtf\"),text_field = \"texts\")\n#my_text2 <- readtext(paste0(\"Data/Files(100) Set 2.rtf\"),text_field = \"texts\")\n#my_text3 <- readtext(paste0(\"Data/Files(100) Set 3.rtf\"),text_field = \"texts\")\n#my_text4 <- readtext(paste0(\"Data/Files(100) Set 4.rtf\"),text_field = \"texts\")\n#my_text5 <- readtext(paste0(\"Data/Files(100) Set 5.rtf\"),text_field = \"texts\")\n#my_text6 <- readtext(paste0(\"Data/Files(100) Set 6.rtf\"),text_field = \"texts\")\n#my_text7 <- readtext(paste0(\"Data/Files(100) Set 7.rtf\"),text_field = \"texts\")\n#my_text8 <- readtext(paste0(\"Data/Files(100) Set 8.rtf\"),text_field = \"texts\")\n#my_text9 <- readtext(paste0(\"Data/Files(100) Set 9.rtf\"),text_field = \"texts\")\n#my_text10 <- readtext(paste0(\"Data/Files(100) Set 10.rtf\"),text_field = \"texts\")\n#my_text11 <- readtext(paste0(\"Data/Files(100) Set 11.rtf\"),text_field = \"texts\")\n#my_text12 <- readtext(paste0(\"Data/Files(91) Set 12.rtf\"),text_field = \"texts\")\n#files<-c(my_text1,my_text2,my_text3,my_text4,my_text5,my_text6,my_text7,my_text8,my_text9,my_text10,my_text11,my_text12)\n```\n:::\n\n\n\n# Putting the information into a dataframe\nUsing a nested for loop, I collected the index positions for the different components of each newspaper article and created a dataframe to put in the data. For the last file, I made a separate for loop since it had fewer articles to be read in and put into a dataframe. \n\n## Some issues I faced here:\n1. Before the beginning of the article, the word body as well as the location and date are often mentioned. However, there was no constant separator that could be used. \n2.  For articles 767-800, the newspaper and date were not read in. Due to this, I could not perform any operations on the column to remove unnecessary text. \n\n::: {.cell}\n\n```{.r .cell-code}\n#df1 <- data.frame(matrix(ncol = 3, nrow = 1100))%>% rename(\n #   Newspaper_Date=X1 ,\n  #  Body=X2,\n   # Tags=X3\n   # )\n#k=0\n#for (i in seq(2,22,2)){\n  #testing <- as.character(files[i])\n  #indices_name<-str_locate_all(testing, \"\\n\\n\\n\\n\\n\\n\")%>%unlist()\n  #indices_body<-str_locate_all(testing,\"\\nBody\")%>%unlist()\n  #indices_classification<-str_locate_all(testing,\"\\nSubject\")%>%unlist()\n  #indices_end<-str_locate_all(testing,\"\\nEnd of Document\")%>%unlist()\n  \n # print(k)\n#  for(j in 1:100){\n #   df1[k+j,1]<-str_sub(testing,indices_name[j],indices_body[j])\n  #  df1[k+j,2]<-str_sub(testing,indices_body[j],indices_classification[j])\n  #  df1[k+j,3]<-str_sub(testing,indices_classification[j],indices_end[j])\n  #}\n  #k=k+100\n  #}\n\n#df2 <- data.frame(matrix(ncol = 3, nrow = 91))%>% rename(\n #   Newspaper_Date=X1 ,\n  #  Body=X2,\n   # Tags=X3\n    #)\n#testing <- as.character(files[24])\n#indices_name<-str_locate_all(testing, \"\\n\\n\\n\\n\\n\\n\")%>%unlist()\n#indices_body<-str_locate_all(testing,\"\\nBody\")%>%unlist()\n#indices_classification<-str_locate_all(testing,\"\\nSubject\")%>%unlist()\n#indices_end<-str_locate_all(testing,\"\\nEnd of Document\")%>%unlist()\n\n\n#for(l in 1:91){\n # df2[l,1]<-str_sub(testing,indices_name[l],indices_body[l])\n  #df2[l,2]<-str_sub(testing,indices_body[l],indices_classification[l])\n  #df2[l,3]<-str_sub(testing,indices_classification[l],indices_end[l])\n#}\n\n#df<-rbind(df1,df2)\n#Does not work because the information is missing for some\n#df<-df%>%separate(Newspaper_Date, into=c(\"Newspaper_Date\", \"Delete\"), sep=\"Copyright\")%>%select(-Delete)\n#this does not work\n#df<-df%>%separate(Newspaper_Date, into=c(\"Newspaper\", \"Date\"), sep=\"{\\n}\")\n#df<-df_test%>%separate(Newspaper_Date, into=c(\"Newspaper\", \"Date\"), sep=\"[August|July]\")\n#df<-df%>%separate(Body,into=c(\"Delete\",\"Body\"),sep=\"--|Body\")\n#write.csv(df, \"D:/Text as Data/Text_as_Data_Fall_2022/posts/output.csv\", row.names=FALSE, quote=FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_All<-readRDS(file = \"D:/Text as Data/All12Files.rds\")\ndf<-df_All\n#Does not work because the information is missing for some\ndf<-df%>%separate(Newspaper_Date, into=c(\"Newspaper_Date\", \"Delete\"), sep=\"Copyright\")%>%select(-Delete)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 34 rows [767,\n768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783,\n784, 785, 786, ...].\n```\n:::\n\n```{.r .cell-code}\n#this does not work\n#df<-df%>%separate(Newspaper_Date, into=c(\"Newspaper\", \"Date\"), sep=\"{\\n}\")\n#df<-df_test%>%separate(Newspaper_Date, into=c(\"Newspaper\", \"Date\"), sep=\"[August|July]\")\n#df<-df%>%separate(Body,into=c(\"Delete\",\"Body\"),sep=\"--|Body\")\n#write.csv(df, \"D:/Text as Data/Text_as_Data_Fall_2022/posts/output.csv\", row.names=FALSE, quote=FALSE)\n```\n:::\n\n\n\n# Creating the corpus and looking at the number of tokens in each document\n\n::: {.cell}\n\n```{.r .cell-code}\nnewspaper_corpus <- corpus(df,text_field = \"Body\")\nnewspaper_corpus_summary <- summary(newspaper_corpus)\nhead(newspaper_corpus_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Text Types Tokens Sentences\n1 text1   293    586        24\n2 text2   138    264         6\n3 text3   365    911        30\n4 text4   187    349         9\n5 text5   229    424        18\n6 text6   231    467        25\n                                              Newspaper_Date\n1 \\n\\n\\n\\n\\n\\n\\nHindustan Times\\nAugust 9, 2021 Monday\\n\\n\\n\n2   \\n\\n\\n\\n\\n\\nHindustan Times\\nAugust 2, 2021 Monday\\n\\n\\n\n3         \\n\\n\\n\\n\\n\\nThe Hindu\\nAugust 9, 2021 Monday\\n\\n\\n\n4 \\n\\n\\n\\n\\n\\nHindustan Times\\nJuly 28, 2021 Wednesday\\n\\n\\n\n5   \\n\\n\\n\\n\\n\\nHindustan Times\\nAugust 8, 2021 Sunday\\n\\n\\n\n6               \\n\\n\\n\\n\\n\\nDNA\\nJuly 27, 2021 Tuesday\\n\\n\\n\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          Tags\nnSubject: OLYMPICS (92%); CRICKET (90%); OLYMPIC COMMITTEES (90%); SPORTS GOVERNING BODIES (90%); SPORTS & RECREATION EVENTS (89%); AGREEMENTS (78%); WOMEN'S SPORTS (78%); ASSOCIATIONS & ORGANIZATIONS (77%); TALKS & MEETINGS (77%)\\n\\nOrganization: INTERNATIONAL OLYMPIC COMMITTEE (57%)\\n\\nIndustry: BUDGETS (66%); TELEVISION INDUSTRY (50%)\\n\\nGeographic: MUMBAI, MAHARASHTRA, INDIA (92%); LOS ANGELES, CA, USA (79%); BIRMINGHAM, ENGLAND (58%); CALIFORNIA, USA (58%); INDIA (94%); UNITED KINGDOM (79%); FRANCE (58%)\\n\\nLoad-Date: August 8, 2021\\n\\n\\n\nnSubject: 2020 TOKYO SUMMER OLYMPICS (90%); OLYMPICS (90%); SHOOTING SPORTS (90%); SUMMER OLYMPICS (90%); WEAPONS & ARMS (89%); EQUESTRIAN SPORTS (78%); WOMEN'S SPORTS (78%)\\n\\nIndustry: MEDIA CONTENT (78%)\\n\\nGeographic: INDIA (91%)\\n\\nLoad-Date: August 1, 2021\\n\\n\\n\nnSubject: 2020 TOKYO SUMMER OLYMPICS (90%); OLYMPICS (90%); SUMMER OLYMPICS (90%); MEN'S SPORTS (78%); SPORTS AWARDS (78%)\\n\\nGeographic: NEW DELHI, INDIA (59%); INDIA (92%)\\n\\nLoad-Date: August 9, 2021\\n\\n\\n\nnSubject: 2020 TOKYO SUMMER OLYMPICS (91%); OLYMPICS (91%); ATHLETES (90%); FIELD HOCKEY (90%); SUMMER OLYMPICS (90%); WOMEN'S SPORTS (90%); BOAT RACING (89%); ROWING (89%); ARCHERY (78%); BADMINTON (78%); BOXING (78%); MEN'S SPORTS (78%); SPORTS & RECREATION EVENTS (78%); SPORTS AWARDS (78%); TOURNAMENTS (76%); BOATING & RAFTING (75%)\\n\\nIndustry: MEDIA CONTENT (78%)\\n\\nGeographic: NEW DELHI, INDIA (74%); INDIA (94%); UNITED KINGDOM (73%)\\n\\nLoad-Date: July 27, 2021\\n\\n\\n\n5                                                                                                                                                                                                                                                                                                                \\nSubject: ARMIES (94%); OLYMPICS (92%); 2020 TOKYO SUMMER OLYMPICS (90%); ARMED FORCES (90%); HEADS OF STATE & GOVERNMENT (90%); PHOTO & VIDEO SHARING (90%); PRIME MINISTERS (90%); SPORTS & RECREATION (90%); SPORTS AWARDS (90%); SUMMER OLYMPICS (90%); VIRAL VIDEOS (90%); HUMAN RESOURCES & PERSONNEL MANAGEMENT (78%); TRACK & FIELD (78%); EDUCATION & TRAINING (77%); MILITARY SERVICE (77%); SOCIAL MEDIA (77%); EDUCATION SYSTEMS & INSTITUTIONS (74%); GOVERNMENT ADVISORS & MINISTERS (73%); STUDENTS & STUDENT LIFE (73%); INTERNET SOCIAL NETWORKING (72%); WEAPONS & ARMS (72%)\\n\\nIndustry: ARMIES (94%); ARMED FORCES (90%); PHOTO & VIDEO SHARING (90%); VIRAL VIDEOS (90%); MEDIA CONTENT (78%); MILITARY SERVICE (77%); SOCIAL MEDIA (77%); EDUCATION SYSTEMS & INSTITUTIONS (74%); INTERNET SOCIAL NETWORKING (72%)\\n\\nPerson: NARENDRA MODI (79%)\\n\\nGeographic: GUJARAT, INDIA (79%); INDIA (94%)\\n\\nLoad-Date: August 8, 2021\\n\\n\\n\n6 \\nSubject: DRUGS IN SPORTS (94%); OLYMPICS (92%); SPORTS & RECREATION (92%); SPORTS & RECREATION EVENTS (91%); 2020 TOKYO SUMMER OLYMPICS (90%); SPORTS AWARDS (90%); SUMMER OLYMPICS (90%); OLYMPIC COMMITTEES (89%); WINTER OLYMPICS (89%); 2016 RIO SUMMER OLYMPICS (78%); ACADEMY AWARDS (78%); ENTERTAINMENT & ARTS AWARDS (78%); GENDER EQUALITY (78%); SPORTS GOVERNING BODIES (78%); WOMEN (78%); WOMEN'S SPORTS (78%); CONTROLLED SUBSTANCES CRIME (76%); NEGATIVE MISC NEWS (76%); NEGATIVE NEWS (76%); INVESTIGATIONS (73%); WINTER SPORTS (73%); SCANDALS (71%); AUTO RACING (66%); DISCRIMINATION (66%); FIFA WORLD CUP (66%); DOCUMENTARY FILMS (65%); TALIBAN (60%); ALTERNATIVE DISPUTE RESOLUTION (50%)\\n\\nCompany:  NETFLIX INC (54%);  AL MUDON INTERNATIONAL REAL ESTATE CO KSCC (51%)\\n\\nTicker: NFLX (NASDAQ) (54%); ALMUDON (KUW) (51%)\\n\\nIndustry: NAICS532282 VIDEO TAPE & DISC RENTAL (54%); SIC7841 VIDEO TAPE RENTAL (54%); NAICS531110 LESSORS OF RESIDENTIAL BUILDINGS & DWELLINGS (51%); SIC6513 OPERATORS OF APARTMENT BUILDINGS (51%); ACADEMY AWARDS (78%); ENTERTAINMENT & ARTS AWARDS (78%); DOCUMENTARY FILMS (65%); MOTOR VEHICLES (61%)\\n\\nGeographic: RUSSIAN FEDERATION (93%); AFGHANISTAN (52%)\\n\\nLoad-Date: July 27, 2021\\n\\n\\n\n```\n:::\n\n```{.r .cell-code}\nnewspaper_corpus_summary$Tokens\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 586 264 911 349 424 467 392 605 300 591 343 295 315 298 298 344 370 336\n [19] 690 420 436 397 475 225 722 688 333 372 221 344 484 591 640 348 357 523\n [37] 276 567 359 415 518 533 414 391 345 354 601 554 216 288 277 466 232 395\n [55] 832 415 399 361 890 299 360 440 823 289 526 674 633 633 420 232 267 688\n [73] 320 248 563 357 781 633 562 624 240 251 426 597 869 591 576 633 364 427\n [91] 562 271 411 588 566 380 342 241 242 251\n```\n:::\n\n```{.r .cell-code}\nndoc(newspaper_corpus)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1191\n```\n:::\n:::\n\n\n# Checking for metadata\nThere was metadata but too many pages were being printed so I commented out the line. \n\n::: {.cell}\n\n```{.r .cell-code}\n#docvars(newspaper_corpus)\n```\n:::\n\n\n# Creating tokens\n\nas.character function prints too many pages so it was commented out. \n\n::: {.cell}\n\n```{.r .cell-code}\nnewspaper_tokens <- tokens(newspaper_corpus)\nhead(newspaper_tokens)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTokens consisting of 6 documents and 2 docvars.\ntext1 :\n [1] \"Body\"     \"Mumbai\"   \",\"        \"Aug\"      \".\"        \"9\"       \n [7] \"-\"        \"From\"     \"a\"        \"solitary\" \"two-day\"  \"fixture\" \n[ ... and 574 more ]\n\ntext2 :\n [1] \"Body\"     \"India\"    \",\"        \"Aug\"      \".\"        \"2\"       \n [7] \"-\"        \"Tokyo\"    \"Olympics\" \"Day\"      \"10\"       \"Full\"    \n[ ... and 252 more ]\n\ntext3 :\n [1] \"Body\"           \"After\"          \"the\"            \"best-ever\"     \n [5] \"performance\"    \"at\"             \"the\"            \"just-concluded\"\n [9] \"Tokyo\"          \"Olympics\"       \",\"              \"India\"         \n[ ... and 899 more ]\n\ntext4 :\n [1] \"Body\"     \"New\"      \"Delhi\"    \",\"        \"July\"     \"28\"      \n [7] \"-\"        \"The\"      \"Tokyo\"    \"Olympics\" \"2020\"     \"enters\"  \n[ ... and 337 more ]\n\ntext5 :\n [1] \"Body\"   \"India\"  \",\"      \"Aug\"    \".\"      \"8\"      \"-\"      \"After\" \n [9] \"Neeraj\" \"Chopra\" \"became\" \"the\"   \n[ ... and 412 more ]\n\ntext6 :\n [1] \"Body\"      \"If\"        \"you're\"    \"wondering\" \"who\"       \"are\"      \n [7] \"these\"     \"ROC\"       \"athletes\"  \"winning\"   \"so\"        \"many\"     \n[ ... and 455 more ]\n```\n:::\n\n```{.r .cell-code}\n#as.character(newspaper_tokens[1])\n#sprintf(as.character(newspaper_tokens[1]))\n```\n:::\n\n\n# Removing punctuation\n\n::: {.cell}\n\n```{.r .cell-code}\nnewspaper_tokens <- tokens(newspaper_tokens ,\n                                    remove_punct = T)\nhead(newspaper_tokens)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTokens consisting of 6 documents and 2 docvars.\ntext1 :\n [1] \"Body\"     \"Mumbai\"   \"Aug\"      \"9\"        \"From\"     \"a\"       \n [7] \"solitary\" \"two-day\"  \"fixture\"  \"between\"  \"Great\"    \"Britain\" \n[ ... and 501 more ]\n\ntext2 :\n [1] \"Body\"       \"India\"      \"Aug\"        \"2\"          \"Tokyo\"     \n [6] \"Olympics\"   \"Day\"        \"10\"         \"Full\"       \"Schedule\"  \n[11] \"Kamalpreet\" \"Kaur\"      \n[ ... and 208 more ]\n\ntext3 :\n [1] \"Body\"           \"After\"          \"the\"            \"best-ever\"     \n [5] \"performance\"    \"at\"             \"the\"            \"just-concluded\"\n [9] \"Tokyo\"          \"Olympics\"       \"India\"          \"shall\"         \n[ ... and 783 more ]\n\ntext4 :\n [1] \"Body\"     \"New\"      \"Delhi\"    \"July\"     \"28\"       \"The\"     \n [7] \"Tokyo\"    \"Olympics\" \"2020\"     \"enters\"   \"the\"      \"fifth\"   \n[ ... and 293 more ]\n\ntext5 :\n [1] \"Body\"   \"India\"  \"Aug\"    \"8\"      \"After\"  \"Neeraj\" \"Chopra\" \"became\"\n [9] \"the\"    \"second\" \"Indian\" \"ever\"  \n[ ... and 372 more ]\n\ntext6 :\n [1] \"Body\"      \"If\"        \"you're\"    \"wondering\" \"who\"       \"are\"      \n [7] \"these\"     \"ROC\"       \"athletes\"  \"winning\"   \"so\"        \"many\"     \n[ ... and 416 more ]\n```\n:::\n:::\n\n\n# Removing stopwords\n\n::: {.cell}\n\n```{.r .cell-code}\nwithoutstopwords_news<- tokens_select(newspaper_tokens, \n                    pattern = stopwords(\"en\"),\n                    select = \"remove\")\nhead(withoutstopwords_news)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTokens consisting of 6 documents and 2 docvars.\ntext1 :\n [1] \"Body\"     \"Mumbai\"   \"Aug\"      \"9\"        \"solitary\" \"two-day\" \n [7] \"fixture\"  \"Great\"    \"Britain\"  \"France\"   \"1900\"     \"Olympics\"\n[ ... and 292 more ]\n\ntext2 :\n [1] \"Body\"       \"India\"      \"Aug\"        \"2\"          \"Tokyo\"     \n [6] \"Olympics\"   \"Day\"        \"10\"         \"Full\"       \"Schedule\"  \n[11] \"Kamalpreet\" \"Kaur\"      \n[ ... and 161 more ]\n\ntext3 :\n [1] \"Body\"           \"best-ever\"      \"performance\"    \"just-concluded\"\n [5] \"Tokyo\"          \"Olympics\"       \"India\"          \"shall\"         \n [9] \"look\"           \"breaking\"       \"top\"            \"10\"            \n[ ... and 456 more ]\n\ntext4 :\n [1] \"Body\"     \"New\"      \"Delhi\"    \"July\"     \"28\"       \"Tokyo\"   \n [7] \"Olympics\" \"2020\"     \"enters\"   \"fifth\"    \"day\"      \"begin\"   \n[ ... and 212 more ]\n\ntext5 :\n [1] \"Body\"       \"India\"      \"Aug\"        \"8\"          \"Neeraj\"    \n [6] \"Chopra\"     \"became\"     \"second\"     \"Indian\"     \"ever\"      \n[11] \"win\"        \"individual\"\n[ ... and 230 more ]\n\ntext6 :\n [1] \"Body\"       \"wondering\"  \"ROC\"        \"athletes\"   \"winning\"   \n [6] \"many\"       \"medals\"     \"Tokyo\"      \"Olympics\"   \"everything\"\n[11] \"need\"       \"know\"      \n[ ... and 230 more ]\n```\n:::\n\n```{.r .cell-code}\n#summary(withoutstopwords_news)\n#as.character(withoutstopwords_news)\n```\n:::\n\n\n# Keyword in context\nSince I want to look at women's and men's sports, I tried looking at the keyword-in-context for the words women and men. \n\n::: {.cell}\n\n```{.r .cell-code}\nkwic_women<- kwic(withoutstopwords_news,\n                        pattern = c(\"women\"))\nkwic_men<-kwic(withoutstopwords_news,\n                        pattern = c(\"men\"))\nhead(kwic_women)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKeyword-in-context with 6 matches.                                                                 \n  [text1, 20]          inclusion 8-team medal sport men | women |\n [text1, 228] Olympics learnt require participation men | women |\n [text3, 274]              valiantly win medal 41 years | women |\n [text3, 304]     happy take note spectacular emergence | women |\n [text3, 318]              2016 Rio games medal winners | women |\n [text3, 324]           Tokyo three seven medal winners | women |\n                                           \n Los Angeles 2028 brightened International \n T20 emerged format choice despite         \n bravehearts made Olympics debut 1980      \n athletes international sports arena coming\n Tokyo three seven medal winners           \n golden record men's hockey team           \n```\n:::\n\n```{.r .cell-code}\nhead(kwic_men)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKeyword-in-context with 6 matches.                                                                   \n  [text1, 19]        cricket's inclusion 8-team medal sport | men |\n [text1, 227] cricket Olympics learnt require participation | men |\n [text7, 164]            IST SAILING Vishnu Saravanan Laser | Men |\n [text7, 175]         IST Ganapathy Kelapanda Varun Thakkar | Men |\n [text19, 21]      Olympics 2020 performance Manpreet Singh | men |\n [text31, 21]     Recently 78-year-old actor shared analogy | men |\n                                        \n women Los Angeles 2028 brightened      \n women T20 emerged format choice        \n Race 7 8 8 35                          \n Race 5 6 8 35                          \n taken social media storm Several       \n women's Indian hockey performance Tokyo\n```\n:::\n:::\n\n\n# Creating a tokens object with bigrams and trigrams \n\n\n::: {.cell}\n\n```{.r .cell-code}\nnews_ngrams <- tokens_ngrams(withoutstopwords_news, n=2:3)\nhead(news_ngrams)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTokens consisting of 6 documents and 2 docvars.\ntext1 :\n [1] \"Body_Mumbai\"        \"Mumbai_Aug\"         \"Aug_9\"             \n [4] \"9_solitary\"         \"solitary_two-day\"   \"two-day_fixture\"   \n [7] \"fixture_Great\"      \"Great_Britain\"      \"Britain_France\"    \n[10] \"France_1900\"        \"1900_Olympics\"      \"Olympics_prospects\"\n[ ... and 593 more ]\n\ntext2 :\n [1] \"Body_India\"          \"India_Aug\"           \"Aug_2\"              \n [4] \"2_Tokyo\"             \"Tokyo_Olympics\"      \"Olympics_Day\"       \n [7] \"Day_10\"              \"10_Full\"             \"Full_Schedule\"      \n[10] \"Schedule_Kamalpreet\" \"Kamalpreet_Kaur\"     \"Kaur_stunned\"       \n[ ... and 331 more ]\n\ntext3 :\n [1] \"Body_best-ever\"             \"best-ever_performance\"     \n [3] \"performance_just-concluded\" \"just-concluded_Tokyo\"      \n [5] \"Tokyo_Olympics\"             \"Olympics_India\"            \n [7] \"India_shall\"                \"shall_look\"                \n [9] \"look_breaking\"              \"breaking_top\"              \n[11] \"top_10\"                     \"10_earliest\"               \n[ ... and 921 more ]\n\ntext4 :\n [1] \"Body_New\"       \"New_Delhi\"      \"Delhi_July\"     \"July_28\"       \n [5] \"28_Tokyo\"       \"Tokyo_Olympics\" \"Olympics_2020\"  \"2020_enters\"   \n [9] \"enters_fifth\"   \"fifth_day\"      \"day_begin\"      \"begin_Indian\"  \n[ ... and 433 more ]\n\ntext5 :\n [1] \"Body_India\"      \"India_Aug\"       \"Aug_8\"           \"8_Neeraj\"       \n [5] \"Neeraj_Chopra\"   \"Chopra_became\"   \"became_second\"   \"second_Indian\"  \n [9] \"Indian_ever\"     \"ever_win\"        \"win_individual\"  \"individual_gold\"\n[ ... and 469 more ]\n\ntext6 :\n [1] \"Body_wondering\"      \"wondering_ROC\"       \"ROC_athletes\"       \n [4] \"athletes_winning\"    \"winning_many\"        \"many_medals\"        \n [7] \"medals_Tokyo\"        \"Tokyo_Olympics\"      \"Olympics_everything\"\n[10] \"everything_need\"     \"need_know\"           \"know_ROC\"           \n[ ... and 469 more ]\n```\n:::\n\n```{.r .cell-code}\ntail(news_ngrams)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTokens consisting of 6 documents and 2 docvars.\ntext1186 :\n [1] \"Body_Diamond\"           \"Diamond_baron\"          \"baron_Savji\"           \n [4] \"Savji_Dholakia\"         \"Dholakia_made\"          \"made_yet\"              \n [7] \"yet_another\"            \"another_announcement\"   \"announcement_declaring\"\n[10] \"declaring_award\"        \"award_Rs\"               \"Rs_2.5\"                \n[ ... and 183 more ]\n\ntext1187 :\n [1] \"Body_THE.WAIT.HAS.ENDED\"  \"THE.WAIT.HAS.ENDED_men's\"\n [3] \"men's_hockey\"             \"hockey_team\"             \n [5] \"team_every\"               \"every_Indian\"            \n [7] \"Indian_dreaming\"          \"dreaming_winning\"        \n [9] \"winning_Olympic\"          \"Olympic_medal\"           \n[11] \"medal_Indian\"             \"Indian_side\"             \n[ ... and 147 more ]\n\ntext1188 :\n [1] \"Body_New\"             \"New_Delhi\"            \"Delhi_Indian\"        \n [4] \"Indian_sports\"        \"sports_fraternity\"    \"fraternity_including\"\n [7] \"including_cricketing\" \"cricketing_greats\"    \"greats_Sachin\"       \n[10] \"Sachin_Tendulkar\"     \"Tendulkar_country's\"  \"country's_white-ball\"\n[ ... and 63 more ]\n\ntext1189 :\n [1] \"Body_India's\"       \"India's_Equestrian\" \"Equestrian_Fouaad\" \n [4] \"Fouaad_Mirza\"       \"Mirza_Seigneur\"     \"Seigneur_Medicott\" \n [7] \"Medicott_qualified\" \"qualified_Jumping\"  \"Jumping_Individual\"\n[10] \"Individual_Finals\"  \"Finals_got\"         \"got_8\"             \n[ ... and 191 more ]\n\ntext1190 :\n [1] \"Body_Saturday\"    \"Saturday_Saikhom\" \"Saikhom_Mirabai\"  \"Mirabai_Chanu\"   \n [5] \"Chanu_stood\"      \"stood_podium\"     \"podium_Tokyo\"     \"Tokyo_silver\"    \n [9] \"silver_medal\"     \"medal_around\"     \"around_neck\"      \"neck_two\"        \n[ ... and 215 more ]\n\ntext1191 :\n [1] \"Body_Mirabai\"            \"Mirabai_Chanu\"          \n [3] \"Chanu_said\"              \"said_failed\"            \n [5] \"failed_campaign\"         \"campaign_Rio\"           \n [7] \"Rio_taught\"              \"taught_overcome\"        \n [9] \"overcome_disappointment\" \"disappointment_make\"    \n[11] \"make_fresh\"              \"fresh_start\"            \n[ ... and 213 more ]\n```\n:::\n:::\n\n\n# Word Cloud\nI created a word cloud to check if there are any words other than the stopwords to be removed.\nThe words- classification, publication-type and body should ideally be removed.\n\n::: {.cell}\n\n```{.r .cell-code}\n# create the dfm\nnews_dfm <- dfm(tokens(withoutstopwords_news))\n\n# find out a quick summary of the dfm\nnews_dfm\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDocument-feature matrix of: 1,191 documents, 22,788 features (99.15% sparse) and 2 docvars.\n       features\ndocs    body mumbai aug 9 solitary two-day fixture great britain france\n  text1    1      1   1 1        1       1       1     1       1      1\n  text2    1      0   1 0        0       0       0     0       0      0\n  text3    1      0   0 0        0       0       0     0       0      0\n  text4    1      0   0 0        0       0       0     2       2      0\n  text5    1      0   1 0        0       0       0     0       0      0\n  text6    1      0   0 0        0       0       0     0       0      0\n[ reached max_ndoc ... 1,185 more documents, reached max_nfeat ... 22,778 more features ]\n```\n:::\n\n```{.r .cell-code}\ntextplot_wordcloud(news_dfm, min_count = 50, random_order = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in wordcloud(x, min_size, max_size, min_count, max_words, color, :\n#tokyo2020 could not be fit on page. It will not be plotted.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in wordcloud(x, min_size, max_size, min_count, max_words, color, :\nparents could not be fit on page. It will not be plotted.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in wordcloud(x, min_size, max_size, min_count, max_words, color, :\nbecoming could not be fit on page. It will not be plotted.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in wordcloud(x, min_size, max_size, min_count, max_words, color, :\ncorners could not be fit on page. It will not be plotted.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in wordcloud(x, min_size, max_size, min_count, max_words, color, :\nalmost could not be fit on page. It will not be plotted.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in wordcloud(x, min_size, max_size, min_count, max_words, color, : story\ncould not be fit on page. It will not be plotted.\n```\n:::\n\n::: {.cell-output-display}\n![](2DecBlogPost2Mekhala-Kumar_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "2DecBlogPost2Mekhala-Kumar_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}