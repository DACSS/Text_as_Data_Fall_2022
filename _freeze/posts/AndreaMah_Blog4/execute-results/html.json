{
  "hash": "1cd6a269be481350630f7246fb5aa8a1",
  "result": {
    "markdown": "---\ntitle: \"Blog Post 4: Sentiment analysis\"\nauthor: \"Andrea Mah\"\ndesription: \"Continued data exploration and analysis\"\ndate: \"11/10/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - BlogPost4\n  - Andrea Mah\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n#loading in nececssary libraries\nlibrary(quanteda.sentiment)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: quanteda\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nPackage version: 3.2.3\nUnicode version: 13.0\nICU version: 69.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nParallel computing: 8 of 8 threads used.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSee https://quanteda.io for tutorials and examples.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'quanteda.sentiment'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:quanteda':\n\n    data_dictionary_LSD2015\n```\n:::\n\n```{.r .cell-code}\nlibrary(quanteda)\nlibrary(tidyr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(devtools)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: usethis\n```\n:::\n\n```{.r .cell-code}\nlibrary(RCurl)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'RCurl'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:tidyr':\n\n    complete\n```\n:::\n\n```{.r .cell-code}\n#devtools::install_github(\"kbenoit/quanteda.dictionaries\")\nlibrary(quanteda.dictionaries)\n#remotes::install_github(\"quanteda/quanteda.sentiment\")\nlibrary(quanteda.sentiment)\n```\n:::\n\n\nFor this blog, I wanted to report on my progress trying out sentiment analysis on my data. In my project, my corpus is made up of speeches given by world leaders at the UN climate change conferences (COP1 - COP15). First, I prepared the data, and ran sentiment analysis. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#loading in the processed dataset. \nx <- getURL('https://raw.githubusercontent.com/andrea-yj-mah/DatafilesTAD/main/FINAL_combined_meta-text_dataset.csv')\nspeechdf <- read.csv(text = x)\n\n#convert the data to a corpus\nspeech_corpus <- corpus(speechdf)\n\n#run sentiment analysis\nspeech_nrc_sentiment <- liwcalike(speech_corpus, data_dictionary_NRC)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in nsentence.character(as.character(x)): nsentence() does not correctly\ncount sentences in all lower-cased text\n```\n:::\n\n```{.r .cell-code}\n#check output\nhead(speech_nrc_sentiment)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  docname Segment  WPS   WC Sixltr   Dic anger anticipation disgust fear  joy\n1   text1       1  597  597  23.45 24.79  0.17         2.18    0.17 2.35 2.68\n2   text2       2 2626 2626  34.23 20.11  0.34         2.36    0.30 1.49 1.18\n3   text3       3 1141 1141  35.67 22.17  0.44         2.63    0.35 3.07 1.84\n4   text4       4  621  621  37.84 19.65  0.81         1.77    0.16 1.61 0.97\n5   text5       5  726  726  37.74 26.86  0.83         1.93    0.83 2.20 1.52\n6   text6       6 1300 1300  38.00 22.38  0.08         2.00    0.15 2.23 1.31\n  negative positive sadness surprise trust AllPunc Period Comma Colon SemiC\n1     0.67     8.88    0.50     0.84  6.37    0.00      0     0     0     0\n2     1.07     7.04    0.53     0.69  5.10    0.27      0     0     0     0\n3     1.49     7.89    0.35     0.79  3.33    0.53      0     0     0     0\n4     1.13     9.34    0.48     0.16  3.22    0.32      0     0     0     0\n5     1.93    11.16    1.10     0.41  4.96    0.96      0     0     0     0\n6     1.08     9.38    0.69     0.31  5.15    0.08      0     0     0     0\n  QMark Exclam Dash Quote Apostro Parenth OtherP\n1     0      0    0  0.00       0       0   0.00\n2     0      0    0  0.27       0       0   0.27\n3     0      0    0  0.53       0       0   0.53\n4     0      0    0  0.32       0       0   0.32\n5     0      0    0  0.96       0       0   0.96\n6     0      0    0  0.08       0       0   0.08\n```\n:::\n\n```{.r .cell-code}\n# converting the corpus to dfm using the dictionary\nspeech_nrc <- tokens(speech_corpus,\n                             include_docvars = TRUE) %>%\n  dfm() %>%\n  dfm_lookup(data_dictionary_NRC)\n\n#checking the conversion and outputs\ndim(speech_nrc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1260   10\n```\n:::\n\n```{.r .cell-code}\nhead(speech_nrc, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDocument-feature matrix of: 10 documents, 10 features (0.00% sparse) and 10 docvars.\n       features\ndocs    anger anticipation disgust fear joy negative positive sadness surprise\n  text1     1           13       1   14  16        4       53       3        5\n  text2     9           62       8   39  31       28      185      14       18\n  text3     5           30       4   35  21       17       90       4        9\n  text4     5           11       1   10   6        7       58       3        1\n  text5     6           14       6   16  11       14       81       8        3\n  text6     1           26       2   29  17       14      122       9        4\n       features\ndocs    trust\n  text1    38\n  text2   134\n  text3    38\n  text4    20\n  text5    36\n  text6    67\n[ reached max_ndoc ... 4 more documents ]\n```\n:::\n\n```{.r .cell-code}\nclass(speech_nrc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"dfm\"\nattr(,\"package\")\n[1] \"quanteda\"\n```\n:::\n:::\n\nAfter running the inital sentiment analysis, I had a dfm, but the dfm was missing my metadata, and I couldn't use the dfm to run calculations that I was interested in. I calculated polarity by document. Next, I converted the dfm to a data frame object and merged it with my metadata.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#converting the data to a dataframe to be able to perform calculations. \ndf_nrc <- convert(speech_nrc, to = \"data.frame\")\n\n#calculate polarity like we learned in class\ndf_nrc$polarity <- (df_nrc$positive - df_nrc$negative)/(df_nrc$positive + df_nrc$negative)\n\ndf_nrc$polarity[(df_nrc$positive + df_nrc$negative) == 0] <- 0\n\n#now I want to merge it back with the dataframe that has all the metadata\nnames(speechdf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"X\"           \"textnum\"     \"filename\"    \"year\"        \"speaker\"    \n [6] \"File\"        \"text\"        \"text_field\"  \"docid_field\" \"country\"    \n[11] \"CRI\"        \n```\n:::\n\n```{.r .cell-code}\nnames(df_nrc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"doc_id\"       \"anger\"        \"anticipation\" \"disgust\"      \"fear\"        \n [6] \"joy\"          \"negative\"     \"positive\"     \"sadness\"      \"surprise\"    \n[11] \"trust\"        \"polarity\"    \n```\n:::\n\n```{.r .cell-code}\n#creating a variable that can help to match data\nspeechdf$doc_id <- paste(\"text\",speechdf$textnum, sep = \"\")\n\n#joining the data\ndf_nrc_meta <- left_join(speechdf, df_nrc, by = \"doc_id\")\n```\n:::\n\n\nThen I just wanted to look at some descriptive information about the results of the sentiment analysis...I noticed that the mean 'positive' scores were\na lot higher than those for 'negative.' I was curious if the difference was significant and ran some t.tests to see. The speeches contained significantly more \npositive sentiment than negative. Perhaps this isn't surprising given that the context where speeches are delivered is one of global cooperation, and probably\nleaders don't want to project too much negativity? \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(df_nrc_meta)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       X             textnum         filename              year     \n Min.   :   1.0   Min.   :   1.0   Length:1260        Min.   :1995  \n 1st Qu.: 315.8   1st Qu.: 315.8   Class :character   1st Qu.:1998  \n Median : 630.5   Median : 630.5   Mode  :character   Median :2003  \n Mean   : 630.5   Mean   : 630.5                      Mean   :2003  \n 3rd Qu.: 945.2   3rd Qu.: 945.2                      3rd Qu.:2007  \n Max.   :1260.0   Max.   :1260.0                      Max.   :2009  \n                                                                    \n   speaker              File               text            text_field       \n Length:1260        Length:1260        Length:1260        Length:1260       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n docid_field          country               CRI            doc_id         \n Length:1260        Length:1260        Min.   :  7.17   Length:1260       \n Class :character   Class :character   1st Qu.: 52.00   Class :character  \n Mode  :character   Mode  :character   Median : 75.17   Mode  :character  \n                                       Mean   : 82.58                     \n                                       3rd Qu.:111.83                     \n                                       Max.   :173.67                     \n                                       NA's   :353                        \n     anger         anticipation       disgust            fear       \n Min.   : 0.000   Min.   :  0.00   Min.   : 0.000   Min.   :  0.00  \n 1st Qu.: 3.000   1st Qu.: 11.00   1st Qu.: 1.000   1st Qu.: 11.00  \n Median : 5.000   Median : 16.00   Median : 3.000   Median : 16.00  \n Mean   : 6.283   Mean   : 18.41   Mean   : 3.757   Mean   : 19.28  \n 3rd Qu.: 8.000   3rd Qu.: 23.00   3rd Qu.: 5.000   3rd Qu.: 24.00  \n Max.   :77.000   Max.   :145.00   Max.   :68.000   Max.   :198.00  \n                                                                    \n      joy            negative         positive         sadness       \n Min.   :  0.00   Min.   :  0.00   Min.   :  1.00   Min.   :  0.000  \n 1st Qu.:  7.00   1st Qu.:  8.00   1st Qu.: 42.00   1st Qu.:  3.000  \n Median : 11.00   Median : 14.00   Median : 59.00   Median :  5.000  \n Mean   : 12.89   Mean   : 17.08   Mean   : 67.44   Mean   :  6.834  \n 3rd Qu.: 16.00   3rd Qu.: 21.00   3rd Qu.: 81.00   3rd Qu.:  9.000  \n Max.   :148.00   Max.   :247.00   Max.   :491.00   Max.   :128.000  \n                                                                     \n    surprise          trust           polarity      \n Min.   : 0.000   Min.   :  0.00   Min.   :-0.7500  \n 1st Qu.: 2.000   1st Qu.: 26.00   1st Qu.: 0.5067  \n Median : 4.000   Median : 37.00   Median : 0.6195  \n Mean   : 5.207   Mean   : 41.53   Mean   : 0.6044  \n 3rd Qu.: 7.000   3rd Qu.: 50.00   3rd Qu.: 0.7193  \n Max.   :50.000   Max.   :368.00   Max.   : 1.0000  \n                                                    \n```\n:::\n\n```{.r .cell-code}\nt.test(df_nrc_meta$positive, df_nrc_meta$negative, paired = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPaired t-test\n\ndata:  df_nrc_meta$positive and df_nrc_meta$negative\nt = 54.985, df = 1259, p-value < 2.2e-16\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n 48.56271 52.15633\nsample estimates:\nmean difference \n       50.35952 \n```\n:::\n:::\n\n\nMoving on to some other analyses with my metadata...\n\nFor now, I was interested in two meta-data variables and their relationship to\nsentiment in the text. These are the year the speech was delivered and the\nclimate risk index (CRI) associated with the country of the speaker. \nThe CRI is based on experienced weather-related impacts\non regions/countries like heat-waves, flooding, or storms. Countries with higher CRI\nare objectively more impacted by climate change. My prediction was that countries with\nhigher CRI may feel more urgency about addressing climate change, and perhaps\nspeeches delivered by members of these countries would contain more negative sentiments,\nfear, or anger... \n\n\nRegarding the year speeches were delivered, my thought was that while speeches from the beginning of\nthese conferences would contain more positive sentiments, but that perhaps these decreased\nover time as climate change impacts became more frequent/severe, and as progress continued to be\nslow.\n\nFor each of these variables, I looked first at correlations and then regressions for\nany of the observed sigificant correlations. I looked at their relationship to polarity, and\nthen to each of the emotions. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#first, is polarity of speeches associated with year? \ncor.test(df_nrc_meta$year, df_nrc_meta$polarity, method = \"pearson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$year and df_nrc_meta$polarity\nt = -2.1297, df = 1258, p-value = 0.03339\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.114782383 -0.004727295\nsample estimates:\n        cor \n-0.05993698 \n```\n:::\n\n```{.r .cell-code}\n#second, was polarity of speeches associated with CRI? \ncor.test(df_nrc_meta$CRI, df_nrc_meta$polarity, method = \"pearson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$CRI and df_nrc_meta$polarity\nt = -1.9996, df = 905, p-value = 0.04584\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.13085287 -0.00123261\nsample estimates:\n        cor \n-0.06632254 \n```\n:::\n:::\n\n\nBoth CRI and year were significantly and negatively correlated with polarity.\n\nFor year*polarity: From the beginning of COP conferences --> COP 15, later speeches tended to be more negative\nFor CRI*polarity: Countries who experienced more impacts from climate change tended to give more negative speeches. \n\nNext, I was interested in looking at other emotions. First, I looked at correlations. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.emo.year <- function(b){\n  cor.test(df_nrc_meta$year, b, method = \"pearson\")\n}\ncor.emo.year(df_nrc_meta$fear)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$year and b\nt = 2.6565, df = 1258, p-value = 0.007995\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.01954463 0.12938102\nsample estimates:\n       cor \n0.07468935 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.year(df_nrc_meta$negative)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$year and b\nt = 0.16257, df = 1258, p-value = 0.8709\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.05065474  0.05979362\nsample estimates:\n        cor \n0.004583416 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.year(df_nrc_meta$positive)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$year and b\nt = -1.843, df = 1258, p-value = 0.06557\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.106810215  0.003343952\nsample estimates:\n        cor \n-0.05189097 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.year(df_nrc_meta$anger)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$year and b\nt = 2.0953, df = 1258, p-value = 0.03634\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.003760639 0.113828340\nsample estimates:\n       cor \n0.05897373 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.year(df_nrc_meta$disgust)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$year and b\nt = 0.41644, df = 1258, p-value = 0.6772\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.04351311  0.06692238\nsample estimates:\n       cor \n0.01174043 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.year(df_nrc_meta$surprise)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$year and b\nt = 1.0788, df = 1258, p-value = 0.2809\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.02486488  0.08548402\nsample estimates:\n       cor \n0.03040221 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.year(df_nrc_meta$trust)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$year and b\nt = -2.082, df = 1258, p-value = 0.03754\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.113458116 -0.003385576\nsample estimates:\n        cor \n-0.05859995 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.year(df_nrc_meta$anticipation)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$year and b\nt = -0.10984, df = 1258, p-value = 0.9126\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.05831224  0.05213738\nsample estimates:\n         cor \n-0.003096873 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.year(df_nrc_meta$sadness)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$year and b\nt = -0.67498, df = 1258, p-value = 0.4998\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.07417443  0.03623637\nsample estimates:\n        cor \n-0.01902704 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.year(df_nrc_meta$joy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$year and b\nt = 0.50707, df = 1258, p-value = 0.6122\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.04096266  0.06946551\nsample estimates:\n       cor \n0.01429501 \n```\n:::\n:::\n\nOnly fear, anger and trust sentiment had significant results. \nIncreased year was associated with increased fear/anger. \nIncreased year was associated with lower trust..\n\nThen, I wanted to regress year on these emotions and polarity, just to see how much variance was explained by time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreg.emo <- function(b){\n emomodel <- lm(b ~ year, data = df_nrc_meta)\n\n emoplot <- ggplot(data = df_nrc_meta, aes(x = year, y = b)) +\n   geom_point() +\n   geom_smooth(method = 'lm', formula = y ~ x)\n \n print(summary(emomodel))\n emoplot\n   \n}\n\nreg.emo(df_nrc_meta$polarity)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = b ~ year, data = df_nrc_meta)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.33986 -0.09879  0.01559  0.11537  0.40787 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)  \n(Intercept)  5.154781   2.136663   2.413   0.0160 *\nyear        -0.002272   0.001067  -2.130   0.0334 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1722 on 1258 degrees of freedom\nMultiple R-squared:  0.003592,\tAdjusted R-squared:  0.0028 \nF-statistic: 4.536 on 1 and 1258 DF,  p-value: 0.03339\n```\n:::\n\n::: {.cell-output-display}\n![](AndreaMah_Blog4_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nreg.emo(df_nrc_meta$fear)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = b ~ year, data = df_nrc_meta)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-20.557  -8.419  -2.869   5.056 178.394 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)   \n(Intercept) -456.40293  179.06208  -2.549  0.01093 * \nyear           0.23753    0.08941   2.657  0.00799 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 14.43 on 1258 degrees of freedom\nMultiple R-squared:  0.005578,\tAdjusted R-squared:  0.004788 \nF-statistic: 7.057 on 1 and 1258 DF,  p-value: 0.007995\n```\n:::\n\n::: {.cell-output-display}\n![](AndreaMah_Blog4_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\nreg.emo(df_nrc_meta$anger)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = b ~ year, data = df_nrc_meta)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-6.788 -3.709 -1.630  2.163 70.846 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)  \n(Intercept) -152.52334   75.79006  -2.012   0.0444 *\nyear           0.07930    0.03785   2.095   0.0363 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.108 on 1258 degrees of freedom\nMultiple R-squared:  0.003478,\tAdjusted R-squared:  0.002686 \nF-statistic:  4.39 on 1 and 1258 DF,  p-value: 0.03634\n```\n:::\n\n::: {.cell-output-display}\n![](AndreaMah_Blog4_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n\n```{.r .cell-code}\nreg.emo(df_nrc_meta$trust)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = b ~ year, data = df_nrc_meta)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-44.08 -15.41  -5.07   7.93 326.93 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)  \n(Intercept) 711.1900   321.6387   2.211   0.0272 *\nyear         -0.3344     0.1606  -2.082   0.0375 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 25.92 on 1258 degrees of freedom\nMultiple R-squared:  0.003434,\tAdjusted R-squared:  0.002642 \nF-statistic: 4.335 on 1 and 1258 DF,  p-value: 0.03754\n```\n:::\n\n::: {.cell-output-display}\n![](AndreaMah_Blog4_files/figure-html/unnamed-chunk-7-4.png){width=672}\n:::\n:::\n\n\nThe relationships certainly look small, even if they were significant. For each dependent variable, year explained less than 1% of the variance. \n\nNext, I followed the same procedure examining climate risk in relation to outcomes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor.emo.cri <- function(b){\n  cor.test(df_nrc_meta$CRI, b, method = \"pearson\")\n}\n\ncor.emo.cri(df_nrc_meta$anger)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$CRI and b\nt = -1.057, df = 905, p-value = 0.2908\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.09998097  0.03004969\nsample estimates:\n        cor \n-0.03511425 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.cri(df_nrc_meta$anticipation)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$CRI and b\nt = -1.0676, df = 905, p-value = 0.286\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.10033077  0.02969666\nsample estimates:\n        cor \n-0.03546715 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.cri(df_nrc_meta$sadness)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$CRI and b\nt = -1.6627, df = 905, p-value = 0.09672\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.119850415  0.009945277\nsample estimates:\n       cor \n-0.0551857 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.cri(df_nrc_meta$disgust)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$CRI and b\nt = -1.3299, df = 905, p-value = 0.1839\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.10894555  0.02099211\nsample estimates:\n        cor \n-0.04416349 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.cri(df_nrc_meta$trust)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$CRI and b\nt = -1.5948, df = 905, p-value = 0.1111\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.11762957  0.01219761\nsample estimates:\n        cor \n-0.05293968 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.cri(df_nrc_meta$surprise)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$CRI and b\nt = -0.51025, df = 905, p-value = 0.61\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.08196365  0.04818957\nsample estimates:\n        cor \n-0.01695888 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.cri(df_nrc_meta$joy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$CRI and b\nt = -1.687, df = 905, p-value = 0.09194\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.120645871  0.009138223\nsample estimates:\n        cor \n-0.05599034 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.cri(df_nrc_meta$fear) #weirdly, higher CRI associated with less fearful? \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$CRI and b\nt = -2.1889, df = 905, p-value = 0.02886\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.13701662 -0.00750883\nsample estimates:\n        cor \n-0.07256861 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.cri(df_nrc_meta$negative) #significant, negative relationship...\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$CRI and b\nt = -0.53941, df = 905, p-value = 0.5897\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.08292628  0.04722256\nsample estimates:\n       cor \n-0.0179278 \n```\n:::\n\n```{.r .cell-code}\ncor.emo.cri(df_nrc_meta$positive) # significant, negative relationship...\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's product-moment correlation\n\ndata:  df_nrc_meta$CRI and b\nt = -1.9938, df = 905, p-value = 0.04647\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.130664183 -0.001040645\nsample estimates:\n        cor \n-0.06613142 \n```\n:::\n:::\n\n\nBesides polarity, CRI was also significantly associated with sentiments of fear, positivity, and negativity. \nThese relationships were not in the direction I expected. Higher CRI was associated with...\n-less fear\n-less negative sentiment\n-less positive sentiment\n\nNext I looked at regressions for these.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#now, regressions. \nreg.emo.cri <- function(b){\n  emomodel <- lm(b ~ CRI, data = df_nrc_meta)\n  \n  emoplot <- ggplot(data = df_nrc_meta, aes(x = CRI, y = b)) +\n    geom_point() +\n    geom_smooth(method = 'lm', formula = y ~ x)\n  \n  print(summary(emomodel))\n  emoplot\n  \n}\n\nreg.emo.cri(df_nrc_meta$fear)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = b ~ CRI, data = df_nrc_meta)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-20.303  -7.940  -2.736   4.654  97.573 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 20.94813    0.97909  21.396   <2e-16 ***\nCRI         -0.02331    0.01065  -2.189   0.0289 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.96 on 905 degrees of freedom\n  (353 observations deleted due to missingness)\nMultiple R-squared:  0.005266,\tAdjusted R-squared:  0.004167 \nF-statistic: 4.791 on 1 and 905 DF,  p-value: 0.02886\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 353 rows containing non-finite values (stat_smooth).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 353 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](AndreaMah_Blog4_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nreg.emo.cri(df_nrc_meta$negative)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = b ~ CRI, data = df_nrc_meta)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-17.595  -8.321  -2.952   4.631 133.876 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 17.75657    0.99718  17.807   <2e-16 ***\nCRI         -0.00585    0.01085  -0.539     0.59    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 13.2 on 905 degrees of freedom\n  (353 observations deleted due to missingness)\nMultiple R-squared:  0.0003214,\tAdjusted R-squared:  -0.0007832 \nF-statistic: 0.291 on 1 and 905 DF,  p-value: 0.5897\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 353 rows containing non-finite values (stat_smooth).\nRemoved 353 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](AndreaMah_Blog4_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n\n```{.r .cell-code}\nreg.emo.cri(df_nrc_meta$positive)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = b ~ CRI, data = df_nrc_meta)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-65.98 -23.60  -6.73  13.84 356.67 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 70.95827    2.88129  24.627   <2e-16 ***\nCRI         -0.06248    0.03134  -1.994   0.0465 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 38.14 on 905 degrees of freedom\n  (353 observations deleted due to missingness)\nMultiple R-squared:  0.004373,\tAdjusted R-squared:  0.003273 \nF-statistic: 3.975 on 1 and 905 DF,  p-value: 0.04647\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 353 rows containing non-finite values (stat_smooth).\nRemoved 353 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](AndreaMah_Blog4_files/figure-html/unnamed-chunk-9-3.png){width=672}\n:::\n\n```{.r .cell-code}\nreg.emo.cri(df_nrc_meta$polarity)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = b ~ CRI, data = df_nrc_meta)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.32361 -0.10122  0.01771  0.11136  0.41906 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.6182749  0.0128103   48.26   <2e-16 ***\nCRI         -0.0002786  0.0001393   -2.00   0.0458 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1696 on 905 degrees of freedom\n  (353 observations deleted due to missingness)\nMultiple R-squared:  0.004399,\tAdjusted R-squared:  0.003299 \nF-statistic: 3.998 on 1 and 905 DF,  p-value: 0.04584\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 353 rows containing non-finite values (stat_smooth).\nRemoved 353 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](AndreaMah_Blog4_files/figure-html/unnamed-chunk-9-4.png){width=672}\n:::\n:::\n\n\nAgain, the relationships though significant were very small, with tiny effect sizes. I will think more about\nwhether or not sentiment analysis is useful to me in this context...I also only looked at results from using one dictionary. \nIn the future, I might see how/whether using different dictionaries might impact my results.\n\nFor the next step in my project, I am interested in testing out some unsupervised methods. Topic modeling might help me to identify interesting things. \n",
    "supporting": [
      "AndreaMah_Blog4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}