{
  "hash": "6ba06e9d5f34444c2fbe12dae5314e87",
  "result": {
    "markdown": "---\ntitle: \"Blog Post 4\"\nauthor: \"Mantek Singh Bhatia\"\ndesription: \"Blog Post 4\"\ndate: \"10/25/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - Blog Post 4\n  - Mantek Singh Bhatia\n  - Self-Identity\n  - Online Gaming\n  - Avatars\n  - Characterization\n---\n\n\n## Research Objective\n\nMy research objective for this project is to understand how people characterize their avatars in games.  \n\n:::{.callout-important}\nHere I use the term Research Objective because I do not have a specific Research Question in mind right now. This project is merely exploratory for me. It may develop closer to the end of the project.\n:::\n\n\nCreating avatars in games gives people the freedom to be creative and cultivate an alternate identity. Now, this identity can be their \"ideal self\" or something that they just create for fun. To understand this process of creating identities I want to first examine the avatars people have already made. For this context I am thinking of scouring Reddit to find threads that talk about people describing the avatars/characters they have created while playing \"Dungeons and Dragons\". \n\n&nbsp;  \n&nbsp;  \n&nbsp;  \n\n## Data Collection  \n\nI was able to scrap data from multiple Reddit threads where users talk about their characters that they have created while playing a Dungeons and Dragons campaign.  \n\n&nbsp;  \n&nbsp;  \n&nbsp;  \n\n&nbsp;  \n&nbsp;  \n&nbsp;  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"rvest\")\n# install.packages(\"RedditExtractoR\")\n# install.packages(\"textclean\")\nlibrary(RedditExtractoR)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'RedditExtractoR' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(rvest)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'rvest' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.5 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()         masks stats::filter()\n✖ readr::guess_encoding() masks rvest::guess_encoding()\n✖ dplyr::lag()            masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(quanteda)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nPackage version: 3.2.3\nUnicode version: 13.0\nICU version: 69.1\nParallel computing: 8 of 8 threads used.\nSee https://quanteda.io for tutorials and examples.\n```\n:::\n\n```{.r .cell-code}\nlibrary(quanteda.textplots)\nlibrary(textclean)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'textclean' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nurl <- c(\"https://www.reddit.com/r/DnD/comments/b1pk5c/tell_me_about_your_characters/\", \n         \"https://www.reddit.com/r/DnD/comments/33bv4f/best_dd_character_youve_made_or_seen/\",\n         \"https://www.reddit.com/r/DnD/comments/37cx49/your_first_ever_dd_character/\",\n         \"https://www.reddit.com/r/rpg/comments/2fk4op/best_dd_character_youve_ever_made/\",\n         \"https://www.reddit.com/r/DnD/comments/cgdwgl/share_your_dnd_character/\",\n         \"https://www.reddit.com/r/dndnext/comments/au8k0w/what_are_some_of_your_favourite_dd_character/\")\n\n# comments <- get_thread_content(url)\n# save.image(\"mantek_blogpost4.RData\")\nload(\"mantek_blogpost4.RData\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in readChar(con, 5L, useBytes = TRUE): cannot open compressed file\n'mantek_blogpost4.RData', probable reason 'No such file or directory'\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in readChar(con, 5L, useBytes = TRUE): cannot open the connection\n```\n:::\n\n```{.r .cell-code}\n#preprocessing\nall_comments <- \n  comments$comments$comment %>% \n  str_replace_all(\"\\n\",\" \")           #data cleaning\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in stri_replace_all_regex(string, pattern, fix_replacement(replacement), : object 'comments' not found\n```\n:::\n\n```{.r .cell-code}\nall_comments <- replace_contraction(all_comments)     #opened all contractions, like didn't to did not\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.factor(x): object 'all_comments' not found\n```\n:::\n\n```{.r .cell-code}\ntail(all_comments, n = 10)    #Some of the comments\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in tail(all_comments, n = 10): object 'all_comments' not found\n```\n:::\n\n```{.r .cell-code}\nreddit_DnD_characters <- corpus(all_comments)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in corpus(all_comments): object 'all_comments' not found\n```\n:::\n\n```{.r .cell-code}\nDnD_summary <- summary(reddit_DnD_characters, n = Inf)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(reddit_DnD_characters, n = Inf): object 'reddit_DnD_characters' not found\n```\n:::\n\n```{.r .cell-code}\nDnD_summary             #SUmmary of the corpus\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'DnD_summary' not found\n```\n:::\n\n```{.r .cell-code}\nDnD_tokens <- tokens(reddit_DnD_characters); DnD_tokens       #tokens before preprosessing\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in tokens(reddit_DnD_characters): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'DnD_tokens' not found\n```\n:::\n\n```{.r .cell-code}\n#Removed Punctuation\n#Removed symbols\n#Removed Numbers\n#Removed Stopwords\n\nDnD_tokens <- tokens(reddit_DnD_characters, remove_punct=TRUE, remove_symbols = TRUE,\n                     remove_numbers = TRUE) %>%\n  tokens_select(pattern=stopwords(\"en\"), selection=\"remove\"); DnD_tokens\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in tokens(reddit_DnD_characters, remove_punct = TRUE, remove_symbols = TRUE, : object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'DnD_tokens' not found\n```\n:::\n\n```{.r .cell-code}\nDnD_dfm <- DnD_tokens %>% \n  dfm() %>%\n  dfm_trim(min_termfreq = 20, verbose = FALSE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in dfm(.): object 'DnD_tokens' not found\n```\n:::\n\n```{.r .cell-code}\nDnD_dfm         #The DFM\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'DnD_dfm' not found\n```\n:::\n\n```{.r .cell-code}\nall_features <- featnames(DnD_dfm); all_features\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in featnames(DnD_dfm): object 'DnD_dfm' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'all_features' not found\n```\n:::\n:::\n\n\n&nbsp;  \n&nbsp;  \n&nbsp;  \n\n:::{.callout-note}\n## Note  \n\nNow we look at some of the common words in our document feature matrix and evaluate whether they are important in the context of characters created by the D&D players. If they are not, they will be removed from our Bag of Words.  \n:::\n\n&nbsp;  \n&nbsp;  \n&nbsp;  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkwic_time <- kwic(reddit_DnD_characters, pattern = phrase(\"time\")); head(kwic_time, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"time\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_time, n = 10): object 'kwic_time' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_character <- kwic(reddit_DnD_characters, pattern = phrase(\"character\")); head(kwic_character, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"character\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_character, n = 10): object 'kwic_character' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_party <- kwic(reddit_DnD_characters, pattern = phrase(\"party\")); head(kwic_party, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"party\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_party, n = 10): object 'kwic_party' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_love <- kwic(reddit_DnD_characters, pattern = phrase(\"love\")); head(kwic_love, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"love\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_love, n = 10): object 'kwic_love' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_kind <- kwic(reddit_DnD_characters, pattern = phrase(\"kind\")); head(kwic_kind, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"kind\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_kind, n = 10): object 'kwic_kind' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_man <- kwic(reddit_DnD_characters, pattern = phrase(\"man\")); head(kwic_man, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"man\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_man, n = 10): object 'kwic_man' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_full <- kwic(reddit_DnD_characters, pattern = phrase(\"full\")); head(kwic_full, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"full\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_full, n = 10): object 'kwic_full' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_group <- kwic(reddit_DnD_characters, pattern = phrase(\"group\")); head(kwic_group, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"group\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_group, n = 10): object 'kwic_group' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_barbarian <- kwic(reddit_DnD_characters, pattern = phrase(\"barbarian\")); head(kwic_barbarian, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"barbarian\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_barbarian, n = 10): object 'kwic_barbarian' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_dragonborn <- kwic(reddit_DnD_characters, pattern = phrase(\"dragonborn\")); head(kwic_dragonborn, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"dragonborn\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_dragonborn, n = 10): object 'kwic_dragonborn' not found\n```\n:::\n:::\n\n\n&nbsp;  \n&nbsp;  \n&nbsp;  \n\n:::{.callout-note}\n## Note  \n\nYou can see from the contextual analysis words like time, character, love, etc., are used in the colloquial sense and does not add any meaning to our analysis of the characters, however, words like bargarian, dragonborn are directly related to the characters defined by the D&D players. Hence, we remove many common words from our DFM.  \n:::\n\n&nbsp;  \n&nbsp;  \n&nbsp;  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nDnD_dfm1 <- dfm_remove(DnD_dfm, c(\"give\", \"love\", \"well\", \"also\", \"go\", \"way\", \"help\", \"like\", \"fun\", \"fire\", \"always\", \"character\",\n                                  \"used\", \"basically\", \"just\", \"make\", \"s\", \"even\", \"name\",\"play\", \"dead\", \"weapon\", \"better\", \"later\", \n                                  \"little\", \"others\", \"people\", \"world\", \"home\", \"house\",\"however\", \"made\", \"small\", \"back\",\n                                  \"called\", \"two\", \"time\", \"soon\",  \"going\", \"sure\", \"last\", \"pretty\", \"party\", \"big\", \"d\", \"amp\",\n                                  \"think\", \"best\", \"life\", \"many\", \"left\", \"see\", \"since\", \"named\", \"real\", \"something\", \"new\",\"part\",\n                                  \"ever\", \"one\", \"day\", \"got\", \"away\", \"took\", \"came\", \"found\", \"decided\", \"find\", \"now\", \"right\",\n                                  \"person\", \"first\", \"can\", \"group\", \"times\", \"trying\", \"long\", \"remember\", \"place\", \"went\", \"lot\",                                          \"still\",\"around\", \"using\", \"get\", \"things\", \"use\", \"try\", \"much\", \"another\", \"currently\", \"never\", \n                                  \"really\",\"due\", \"without\", \"started\", \"became\", \"become\", \"far\", \"take\", \"every\", \"characters\", \"want\",                                    \"let\", \"know\", \"ended\", \"everyone\", \"gave\", \"though\", \"almost\", \"said\", \"great\", \"guy\", \"enough\",\n                                  \"actually\", \"eventually\", \"set\", \"next\", \"tried\", \"managed\", \"kept\", \"thought\", \"playing\", \"thing\",                                        \"rest\", \"everything\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in dfm_select(x, ..., selection = \"remove\"): object 'DnD_dfm' not found\n```\n:::\n\n```{.r .cell-code}\nfeatnames(DnD_dfm1)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in featnames(DnD_dfm1): object 'DnD_dfm1' not found\n```\n:::\n\n```{.r .cell-code}\ntopfeatures(DnD_dfm1, 100)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in topfeatures(DnD_dfm1, 100): object 'DnD_dfm1' not found\n```\n:::\n\n```{.r .cell-code}\ntextplot_wordcloud(DnD_dfm1)      #Word Cloud of the existing tokens\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in textplot_wordcloud(DnD_dfm1): object 'DnD_dfm1' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_chaotic_good <- kwic(reddit_DnD_characters, pattern = phrase(\"chaotic good\")); head(kwic_chaotic_good, n=100)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"chaotic good\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_chaotic_good, n = 100): object 'kwic_chaotic_good' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_lawful_good <- kwic(reddit_DnD_characters, pattern = phrase(\"lawful good\")); head(kwic_lawful_good, n=100)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"lawful good\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_lawful_good, n = 100): object 'kwic_lawful_good' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_neutral_good <- kwic(reddit_DnD_characters, pattern = phrase(\"neutral good\")); head(kwic_neutral_good, n=100)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"neutral good\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_neutral_good, n = 100): object 'kwic_neutral_good' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_family <- kwic(reddit_DnD_characters, pattern = phrase(\"family\")); head(kwic_family, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"family\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_family, n = 10): object 'kwic_family' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_father <- kwic(reddit_DnD_characters, pattern = phrase(\"father\")); head(kwic_father, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"father\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_father, n = 10): object 'kwic_father' not found\n```\n:::\n\n```{.r .cell-code}\nkwic_brother <- kwic(reddit_DnD_characters, pattern = phrase(\"brother\")); head(kwic_brother, n=10)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(reddit_DnD_characters, pattern = phrase(\"brother\")): object 'reddit_DnD_characters' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in head(kwic_brother, n = 10): object 'kwic_brother' not found\n```\n:::\n:::\n\n\n&nbsp;  \n&nbsp;  \n&nbsp;  \n\n:::{.callout-note}\n## Note  \n\nHere we can see the words like father, brother, and family are used in the context of creating a back story for the character created by the player, however, they just provide metadata about the character, therefore, even though it is important in terms of the character building, they are not directly related to the features of the character itself.  \n\nBi-grams like chaotic good, lawful good, and neutral good are used to describe the personality of the characters.  \n\n**Chaotic good** is the philosophy that goodness is best achieved through the freedom of individuals to act independently. It is a philosophy of altruistic individualism. This philosophy holds that people should behave altruistically and that society exists for the sake of its individual members.  \n\n**Lawful good** is the philosophy that goodness is best achieved through law and order. It is a philosophy of altruistic collectivism. This philosophy holds that people should behave altruistically and put the needs of the group ahead of individual desires.\n\n**Neutral good** is the philosophy that goodness should be advanced by using whatever means provide the most benefit. It is a philosophy of altruistic consequentialism. This philosophy holds that people should behave altruistically and balance the needs of the collective as a whole and the needs of the individuals making up the collective.  \n:::\n\n&nbsp;  \n&nbsp;  \n&nbsp;  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nDnD_dfm_char <- dfm_remove(DnD_dfm1, c(\"good\", \"fight\", \"chaotic\", \"kind\", \"campaign\", \"war\", \"killed\", \"story\", \"death\", \"old\", \"friend\", \n                                       \"city\",\"full\", \"man\", \"knowledge\", \"gold\", \"game\", \"played\", \"level\", \"high\", \"neutral\", \"hand\", \n                                       \"town\", \"order\", \"often\", \"player\", \"hit\",  \"battle\", \"player\", \"damage\", \"lawful\", \"idea\", \"years\",\n                                       \"shield\", \"powerful\", \"evil\", \"bad\", \"strength\", \"work\", \"kill\", \"giant\", \"wanted\", \"mind\",                                                \"village\",\"save\", \"end\", \"point\", \"combat\", \"dm\", \"favorite\", \"died\", \"magical\", \"class\", \"orc\", \n                                       \"cast\", \"half\", \"spell\", \"family\", \"brother\", \"father\", \"race\", \"young\", \"halfling\"))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in dfm_select(x, ..., selection = \"remove\"): object 'DnD_dfm1' not found\n```\n:::\n\n```{.r .cell-code}\nDnD_dfm_char\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'DnD_dfm_char' not found\n```\n:::\n\n```{.r .cell-code}\ntopfeatures(DnD_dfm_char, 100)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in topfeatures(DnD_dfm_char, 100): object 'DnD_dfm_char' not found\n```\n:::\n\n```{.r .cell-code}\ntextplot_wordcloud(DnD_dfm_char)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in textplot_wordcloud(DnD_dfm_char): object 'DnD_dfm_char' not found\n```\n:::\n\n```{.r .cell-code}\n#creating a Network plot\nDnD_fcm = fcm(DnD_dfm_char)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in fcm(DnD_dfm_char): object 'DnD_dfm_char' not found\n```\n:::\n\n```{.r .cell-code}\n# pull the top features\nmyFeatures = names(topfeatures(DnD_fcm, 20))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in topfeatures(DnD_fcm, 20): object 'DnD_fcm' not found\n```\n:::\n\n```{.r .cell-code}\n# retain only those top features as part of our matrix\nSmaller_fsm = fcm_select(DnD_fcm, pattern = myFeatures, selection = \"keep\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in fcm_select(DnD_fcm, pattern = myFeatures, selection = \"keep\"): object 'DnD_fcm' not found\n```\n:::\n\n```{.r .cell-code}\n# compute size weight for vertices in network\nsize = log(colSums(Smaller_fsm))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'colSums': object 'Smaller_fsm' not found\n```\n:::\n\n```{.r .cell-code}\n# create plot\ntextplot_network(Smaller_fsm, vertex_size = size / max(size) * 3)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in textplot_network(Smaller_fsm, vertex_size = size/max(size) * : object 'Smaller_fsm' not found\n```\n:::\n:::\n\n\n\n&nbsp;  \n&nbsp;  \n&nbsp;  \n\n:::{.callout-note}\n## Note   \n\nHere, you can read more about the different classes of characters you see in the word cloud and network plot.  \n\n[Different Character Classes of D&D characters](https://www.dndbeyond.com/classes)  \n:::\n\n",
    "supporting": [
      "MantekBhatia_BlogPost_4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}