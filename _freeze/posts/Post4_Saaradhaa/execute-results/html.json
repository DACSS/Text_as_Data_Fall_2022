{
  "hash": "cf188c538489224f869df9b5be65bb00",
  "result": {
    "markdown": "---\ntitle: \"Post 4\"\nauthor: \"Saaradhaa M\"\ndescription: \"Cleaning Reddit Data; Analysing PDFs and Reddit Data\"\ndate: \"10/29/2022\"\neditor: visual\nformat:\n    html:\n        df-print: paged\n        toc: true\n        code-copy: true\n        code-tools: true\n        css: \"styles.css\"\ncategories: \n  - post 4\n  - saaradhaa\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(stringr)\nlibrary(quanteda)\nlibrary(quanteda.textplots)\nlibrary(readtext)\nlibrary(phrasemachine)\nlibrary(RedditExtractoR)\nlibrary(readr)\n\nload(\"post4_saaradhaa.rdata\")\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n```\n:::\n\n\n## Introduction\n\nIn the first part of the post, I will revise some of the processing and preliminary analysis for the oral histories, which I worked on in the previous blog post. I will then work on generating and cleaning the Reddit data.\n\n## Oral Histories: Cleaning Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# list out files.\n# file_list <- dir(\"~/Desktop/2022_Fall/GitHub/Text_as_Data_Fall_2022/posts/Transcripts\", full.names = TRUE, pattern = \"*.txt\")\n\n# create list of text files.\n# transcripts <- readtext(paste0(file_list), docvarnames = c(\"transcript\", \"text\"))\n\n# remove references to 'interviewer:' and 'interviewee:', as well as line breaks, '\\n'. I found this website really helpful in testing out regex: https://spannbaueradam.shinyapps.io/r_regex_tester/\n# transcripts$text <- str_replace_all(transcripts$text, \"[a-zA-Z]+:\", \"\")\n# transcripts$text <- str_replace_all(transcripts$text, \"\\n\", \"\")\n# saveRDS(transcripts, \"transcripts.rds\")\n# transcripts <- read_rds(\"transcripts.rds\")\n\n# create 'quanteda' corpus. \noh_corpus <- corpus(transcripts$text)\n\n# create my own list of stopwords, based on qualitative reading of the first transcript.\nto_keep <- c(\"do\", \"does\", \"did\", \"would\", \"should\", \"could\", \"ought\", \"isn't\", \"aren't\", \"wasn't\", \"weren't\", \"hasn't\", \"haven't\", \"hadn't\", \"doesn't\", \"don't\", \"didn't\", \"won't\", \"wouldn't\", \"shan't\", \"shouldn't\", \"can't\", \"cannot\", \"couldn't\", \"mustn't\", \"because\", \"against\", \"between\", \"into\", \"through\", \"during\", \"before\", \"after\", \"above\", \"below\", \"over\", \"under\", \"no\", \"nor\", \"not\")\nStopwords <- stopwords(\"en\")\nStopwords <- Stopwords[!(Stopwords %in% to_keep)]\n\n# create tokens, remove punctuation, numbers, symbols and stopwords, then convert to lowercase.\noh_tokens <- tokens(oh_corpus, remove_punct = T, remove_numbers = T, remove_symbols = T)\noh_tokens <- tokens_select(oh_tokens, pattern = Stopwords, selection = \"remove\")\noh_tokens <- tokens_tolower(oh_tokens)\n\n# remove tokens that appeared in previous wordcloud that are not too meaningful.\noh_tokens <- tokens_remove(oh_tokens, c(\"know\", \"even\", \"used\", \"thing\", \"lot\", \"yes\", \"say\", \"going\", \"went\", \"yeah\", \"come\", \"actually\", \"mean\", \"like\", \"think\", \"get\", \"go\", \"said\", \"see\", \"things\", \"really\", \"well\", \"still\", \"little\", \"got\", \"right\", \"can\", \"came\", \"um\", \"quite\", \"bit\", \"every\", \"oh\", \"many\", \"always\", \"one\", \"two\", \"just\", \"much\", \"want\", \"wanted\", \"okay\", \"part\", \"also\", \"just\", \"us\", \"never\", \"many\", \"something\", \"want\", \"wanted\", \"uh\"))\n\n# get summary of corpus.\noh_summary <- summary(oh_corpus)\n\n# add metadata on interview phase and interviewee gender.\noh_summary$phase <- c(1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4)\noh_summary$gender <- c(1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 3, 1, 2, 2)\n\n# create metadata.\ndocvars(oh_corpus) <- oh_summary\n```\n:::\n\n\n## Oral Histories: Text Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# re-create wordcloud with modified data.\ndfm <- oh_tokens %>% dfm() %>% dfm_trim(min_termfreq = 10, verbose = FALSE, min_docfreq = .1, docfreq_type = \"prop\") %>% dfm_remove(stopwords(\"en\"))\ntextplot_wordcloud(dfm, max_words=50, color=\"purple\")\n```\n\n::: {.cell-output-display}\n![](Post4_Saaradhaa_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nI changed up the wordcloud by removing some tokens that were not as meaningful, and this seems to paint a much clearer picture of what the interviews were about - work, music, college, family, friends, and moving to a new country.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create fcm.\nfcm <- fcm(dfm)\n\n# keep only top features.\nsmall_fcm <- fcm_select(fcm, pattern = names(topfeatures(fcm, 50)), selection = \"keep\")\n\n# compute weights.\nsize <- log(colSums(small_fcm))\n\n# create network.\ntextplot_network(small_fcm, vertex_size = size / max(size) * 4)\n```\n\n::: {.cell-output-display}\n![](Post4_Saaradhaa_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThe network plot also looks a lot better after removing symbols; it's much more inter-connected. It looks like many interviews referenced Seattle, which makes sense, since the interviews were conducted by UW. Lots of references to work, school and university, which might reflect (1) South Asian cultural focus on these themes, or (2) possibly many of the migrants moved to the US for these purposes.\n\n## Oral Histories: N-Grams\n\nSince the oral histories were collected over a number of years, there did not seem to be a uniform structure that they followed. Hence, I will randomly select a subset of transcripts, and then try to identify common phrases.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# randomly choose 10 out of 41 transcripts.\nset.seed(1)\nnumbers <- sample(1:41, 10, replace=FALSE)\ndocuments <- transcripts$text[numbers]\n\n# generate phrases.\nphrases <- phrasemachine(documents, minimum_ngram_length = 2, maximum_ngram_length = 4, return_phrase_vectors = TRUE, return_tag_sequences = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCurrently tagging document 1 of 10 \nCurrently tagging document 2 of 10 \nCurrently tagging document 3 of 10 \nCurrently tagging document 4 of 10 \nCurrently tagging document 5 of 10 \nCurrently tagging document 6 of 10 \nCurrently tagging document 7 of 10 \nCurrently tagging document 8 of 10 \nCurrently tagging document 9 of 10 \nCurrently tagging document 10 of 10 \nExtracting phrases from document 1 of 10 \nExtracting phrases from document 2 of 10 \nExtracting phrases from document 3 of 10 \nExtracting phrases from document 4 of 10 \nExtracting phrases from document 5 of 10 \nExtracting phrases from document 6 of 10 \nExtracting phrases from document 7 of 10 \nExtracting phrases from document 8 of 10 \nExtracting phrases from document 9 of 10 \nExtracting phrases from document 10 of 10 \n```\n:::\n\n```{.r .cell-code}\nphrases[[1]]$phrases[300:320]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"set_designer\"                  \"costume_designer\"             \n [3] \"early_years\"                   \"college_education\"            \n [5] \"future_career\"                 \"future_career_goals\"          \n [7] \"career_goals\"                  \"medical_school\"               \n [9] \"high_level\"                    \"high_level_of_Biology\"        \n[11] \"level_of_Biology\"              \"medical_school\"               \n[13] \"research_of_history\"           \"English_teacher\"              \n[15] \"four_brothers\"                 \"English_Honors\"               \n[17] \"Master’s_degree\"               \"Master’s_degree_in_Jadavpur\"  \n[19] \"degree_in_Jadavpur\"            \"degree_in_Jadavpur_University\"\n[21] \"Jadavpur_University\"          \n```\n:::\n\n```{.r .cell-code}\nphrases[[2]]$phrases[300:320]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Institute_for_Advanced\"         \"Institute_for_Advanced_Studies\"\n [3] \"Advanced_Studies\"               \"state_school\"                  \n [5] \"New_Jersey\"                     \"New_Jersey_State\"              \n [7] \"New_Jersey_State_School\"        \"Jersey_State\"                  \n [9] \"Jersey_State_School\"            \"State_School\"                  \n[11] \"School_for_the_Deaf\"            \"third_grade\"                   \n[13] \"hardest_time\"                   \"following_year\"                \n[15] \"classes_in_sign\"                \"classes_in_sign_language\"      \n[17] \"sign_language\"                  \"other_people\"                  \n[19] \"…_Yeah\"                         \"other_teachers\"                \n[21] \"kinds_of_things\"               \n```\n:::\n\n```{.r .cell-code}\nphrases[[3]]$phrases[300:320]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Norma_Morgan_from_Bozeman\"      \"Morgan_from_Bozeman\"           \n [3] \"Providence_Hospital\"            \"first_daughter\"                \n [5] \"job_in_a_steel\"                 \"steel_factory\"                 \n [7] \"Isaacson_Ironworks\"             \"Isaacson_Ironworks_on_Marginal\"\n [9] \"Ironworks_on_Marginal\"          \"Ironworks_on_Marginal_Way\"     \n[11] \"Marginal_Way\"                   \"right_by_Boeing\"               \n[13] \"right_by_Boeing_Plant\"          \"Boeing_Plant\"                  \n[15] \"[my_wife\"                       \"Madagascar_for_a_year\"         \n[17] \"19_years\"                       \"younger_brother\"               \n[19] \"interesting_–\"                  \"[_Laughs\"                      \n[21] \"Paris_–\"                       \n```\n:::\n\n```{.r .cell-code}\nphrases[[4]]$phrases[300:320]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Hong_Kong_to_Tokyo\"   \"Kong_to_Tokyo\"        \"boat_in_Hong\"        \n [4] \"boat_in_Hong_Kong\"    \"Hong_Kong\"            \"name_of_this_boat\"   \n [7] \"little_shopping\"      \"Hong_Kong\"            \"nobody’s_business\"   \n[10] \"lot_of_Indians\"       \"independent_country\"  \"champions_of_freedom\"\n[13] \"good_business\"        \"taxi_drivers\"         \"own_businesses\"      \n[16] \"good_time\"            \"big_boat\"             \"two_passengers\"      \n[19] \"two_Ceylonese\"        \"States_for_studies\"   \"Indian_fruit\"        \n```\n:::\n\n```{.r .cell-code}\nphrases[[5]]$phrases[300:320]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"type_of_thing\"              \"thirty-some_people\"        \n [3] \"two_blocks\"                 \"blocks_from_the_university\"\n [5] \"exact_address\"              \"off_.ramp\"                 \n [7] \"three_blocks\"               \"other_street\"              \n [9] \"different_facility\"         \"long_time\"                 \n[11] \"kind_of_set\"                \"[_Laughs\"                  \n[13] \"least_nine_months\"          \"nine_months\"               \n[15] \"nine_months\"                \"different_places\"          \n[17] \"portable_housing\"           \"right_at_the_university\"   \n[19] \"big_frosh_pond\"             \"frosh_pond\"                \n[21] \"World_War\"                 \n```\n:::\n\n```{.r .cell-code}\nphrases[[6]]$phrases[300:320]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"white_community\"           \"Asian_countries\"          \n [3] \"Sri_Lanka\"                 \"sort_of_racism\"           \n [5] \"university_community\"      \"certain_times\"            \n [7] \"university_environment\"    \"home_countries\"           \n [9] \"own_identity\"              \"struggles_of_identity\"    \n[11] \"Sri_Lankan\"                \"American_Culture\"         \n[13] \"100_years\"                 \"part_of_Sri\"              \n[15] \"part_of_Sri_Lanka\"         \"Sri_Lanka\"                \n[17] \"citizens_of_two_countries\" \"two_countries\"            \n[19] \"Sri_Lanka\"                 \"whole_family\"             \n[21] \"Sri_Lankan\"               \n```\n:::\n\n```{.r .cell-code}\nphrases[[7]]$phrases[300:320]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"masters_program\"                  \"MIT_as_a_research\"               \n [3] \"research_faculty\"                 \"faculty_in_the_Design\"           \n [5] \"Islamic_Societies\"                \"Islamic_Societies_program\"       \n [7] \"Societies_program\"                \"student_to_faculty\"              \n [9] \"head_of_the_Aga\"                  \"Aga_Khan\"                        \n[11] \"Aga_Khan_Program\"                 \"Khan_Program\"                    \n[13] \"Khan_Program_for_Islamic\"         \"Program_for_Islamic\"             \n[15] \"Program_for_Islamic_Architecture\" \"Islamic_Architecture\"            \n[17] \"new_discipline\"                   \"Design_for_the_Islamic\"          \n[19] \"Islamic_Society\"                  \"whole_new_discipline\"            \n[21] \"new_discipline\"                  \n```\n:::\n\n```{.r .cell-code}\nphrases[[8]]$phrases[300:320]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Asian_community\"             \"community_in_the_Seattle\"   \n [3] \"Pacific_Northwest\"           \"Pacific_Northwest_area\"     \n [5] \"Northwest_area\"              \"kind_of_music\"              \n [7] \"Hindustani_classical_music\"  \"classical_music\"            \n [9] \"many_cultural_organizations\" \"cultural_organizations\"     \n[11] \"case_during_that_time\"       \"light_about_the_community\"  \n[13] \"South_Asian_community\"       \"Asian_community\"            \n[15] \"kind_of_art\"                 \"South_Asian_community\"      \n[17] \"Asian_community\"             \"East_Pakistan\"              \n[19] \"Pakistan_at_that_time\"       \"few_families\"               \n[21] \"few_Indian_students\"        \n```\n:::\n\n```{.r .cell-code}\nphrases[[9]]$phrases[300:320]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"United_Nations\"             \"Lakshmi_teacher\"           \n [3] \"United_Nations\"             \"great_body\"                \n [5] \"great_reason\"               \"Hindi_courses\"             \n [7] \"Hindi_courses_after_school\" \"courses_after_school\"      \n [9] \"short_stories\"              \"Funny_thing\"               \n[11] \"lot_of_[color\"              \"lot_of_[color_]\"           \n[13] \"[color_]\"                   \"[color_]_complex\"          \n[15] \"]_complex\"                  \"complex_in_those_days\"     \n[17] \"respect_South\"              \"respect_South_Indians\"     \n[19] \"South_Indians\"              \"kind_of_go\"                \n[21] \"people’s_mind\"             \n```\n:::\n\n```{.r .cell-code}\nphrases[[10]]$phrases[300:320]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"new_workshop\"           \"brand_new_quarters\"     \"new_quarters\"          \n [4] \"Hong_Kong\"              \"Hong_Kong_brother\"      \"Hong_Kong_brother_]\"   \n [7] \"Kong_brother\"           \"Kong_brother_]\"         \"brother_]\"             \n[10] \"big_deal\"               \"[My_cousin\"             \"[My_cousin_]\"          \n[13] \"cousin_]\"               \"few_months\"             \"good_time\"             \n[16] \"[_India\"                \"[_India_]\"              \"India_]\"               \n[19] \"Commonwealth_country\"   \"job_with_BOAC\"          \"job_with_BOAC_[British\"\n```\n:::\n\n```{.r .cell-code}\n# save.image(\"post4_saaradhaa.RData\")\n```\n:::\n\n\nFrom the small selection of n-grams above, it seems like some topics that might arise are memories from South Asia, what prompted the move to the US (education, work), travel, experiences in the US, etc.\n\n**How do I preserve sequences of two or four numbers in my tokens? These might reference years in history, which might be important to understand some topics that come up.**\n\n## Reddit: Generating Data\n\nThe previous time I tried to load the Reddit data, it just didn't work. I'm going to try to leave RStudio alone for a longer time this time around and see if that might do the trick instead. Much of the code below is commented out, since it need not be re-run when rendering.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# generate top 1000 posts.\n# content_top <- find_thread_urls(subreddit=\"ABCDesis\",period=\"all\",sort_by=\"top\")\n# content_top <- content_top[-1,]\n# content_top$type <- \"top\"\n# saveRDS(content_top, \"content_top.rds\")\n# content_top <- read_rds(\"content_top.rds\")\n\n# attempting to generate comments alone first - this took ~ 1hr.\n# url_content <- get_thread_content(content$url[1:1000])$comments$comment\n# saveRDS(url_content, \"url_content.rds\")\n# url_content_top <- read_rds(\"url_content.rds\")\n\n# i decided to try to get additional info on the comments as well.\n# url_content_info <- get_thread_content(content$url[1:1000])$comments\n# saveRDS(url_content_info, \"url_content_info.rds\")\n# url_content_info_top <- read_rds(\"url_content_info.rds\")\n# url_content_info_top$type <- \"top\"\n# saveRDS(url_content_info_top, \"url_content_info_top.rds\")\n# comments_top <- read_rds(\"url_content_info_top.rds\")\n\n# dr. song also wanted me to try generating more than 1000 posts, so i'm gonna try to create tables for 'hot' and 'rising' as well, not just 'top'.\n# content_hot <- find_thread_urls(subreddit=\"ABCDesis\",period=\"all\",sort_by=\"hot\")\n# content_hot$id <- 1:991\n\n# check duplicates with top posts, then remove them.\n# duplicates <- inner_join(content_hot, content_top)\n# remove_list <- duplicates$id\n# content_hot <- content_hot %>% slice(-c(remove_list))\n\n# save object.\n# content_hot$type <- \"hot\"\n# saveRDS(content_hot, \"content_hot.rds\")\n# content_hot <- read_rds(\"content_hot.rds\")\n\n# generate comments for 'hot' posts.\n# comments_hot <- get_thread_content(content_hot$url[1:936])$comments\n# comments_hot$type <- \"hot\" \n# saveRDS(comments_hot, \"comments_hot.rds\")\n# comments_hot <- read_rds(\"comments_hot.rds\")\n\n# ok, i'm not going to add rising' or 'new', because 'rising' only had 24 posts, and 'new' had many duplicates with 'hot'. so i'll just be using 'hot' and 'top' posts.\n\n# combine 'hot' and 'top' posts into 1 dataframe.\n# content_hot <- content_hot[,-8]\n# reddit_posts <- rbind(content_hot, content_top)\n# saveRDS(reddit_posts, \"reddit_posts.rds\")\n# reddit_posts <- read_rds(\"reddit_posts.rds\")\n\n# combine 'hot' and 'top' comments into 1 dataframe.\n# reddit_comments <- rbind(comments_hot, comments_top)\n# saveRDS(reddit_comments, \"reddit_comments.rds\")\n# reddit_comments <- read_rds(\"reddit_comments.rds\")\n```\n:::\n\n\nOk, this is a quick summary of what I've done above - I generated both the 'top' and 'hot' posts of all time from the subreddit, as well as all the comments on the posts, and some associated information. I then combined them into two dataframes - one with all the posts (*N* = 1,936) and another with all the comments (*N* = 110,967). I'm going to clean up the two dataframes in the following code chunk.\n\n## Reddit: Cleaning Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# check dataframe of comments.\nglimpse(reddit_comments)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 106,092\nColumns: 9\n$ url        <chr> \"https://www.reddit.com/r/ABCDesis/comments/x6oivc/what_are…\n$ author     <chr> \"jubeer\", \"day1222\", \"ninithebeanie\", \"skinnybrownhippie\", …\n$ date       <chr> \"2022-09-06\", \"2022-09-06\", \"2022-09-06\", \"2022-09-06\", \"20…\n$ timestamp  <dbl> 1662424047, 1662427654, 1662445516, 1662479140, 1662475081,…\n$ score      <dbl> 1, 1, 1, 1, 1, 1, 5, 1, -4, 1, 1, 1, 1, -1, 0, 29, 15, 10, …\n$ golds      <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ comment    <chr> \"The Baljeet meme cut\", \"Honestly works for a lot of brown …\n$ comment_id <chr> \"1\", \"1_1\", \"1_2\", \"2\", \"1\", \"2\", \"1\", \"2\", \"3\", \"4\", \"5\", …\n$ type       <chr> \"hot\", \"hot\", \"hot\", \"hot\", \"hot\", \"hot\", \"hot\", \"hot\", \"ho…\n```\n:::\n\n```{.r .cell-code}\n# remove 'upvotes' and 'downvotes' as they haves no useful info.\nreddit_comments <- reddit_comments %>% select (-c(upvotes, downvotes))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `select()`:\n! Can't subset columns that don't exist.\n✖ Column `upvotes` doesn't exist.\n```\n:::\n\n```{.r .cell-code}\n# remove 'deleted' / 'removed' comments.\nreddit_comments$comment <- str_replace_all(reddit_comments$comment, \"\\\\[deleted\\\\]\", \"\")\nreddit_comments$comment <- str_replace_all(reddit_comments$comment, \"\\\\[ Removed by Reddit \\\\]\", \"\")\nreddit_comments <- reddit_comments[!(reddit_comments$comment==\"\"), ]\n\n# create a vectorized function to remove html elements from comments.\n# vectorized_htmldecode <- Vectorize(HTMLdecode)\n\n# run the function - this is commented out because it took a really long time. \n# reddit_comments$comment <- vectorized_htmldecode(reddit_comments$comment)\n\n# i'm going to save the object so i don't have to re-do this.\n# saveRDS(reddit_comments, \"reddit_comments_final.rds\")\n\n# re-load the object.\n# reddit_comments_final <- read_rds(\"reddit_comments_final.rds\")\n\n# ok, now check the dataframe of posts.\nglimpse(reddit_posts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,936\nColumns: 7\n$ date_utc  <chr> \"2022-09-05\", \"2022-09-06\", \"2022-09-05\", \"2022-09-05\", \"202…\n$ timestamp <dbl> 1662405203, 1662431521, 1662394101, 1662350088, 1662419582, …\n$ title     <chr> \"What are some good hairstyles for guy that does have his be…\n$ text      <chr> \"\", \"\", \"\\n\\n[View Poll](https://www.reddit.com/poll/x6jxfg)…\n$ comments  <dbl> 4, 2, 9, 25, 12, 16, 4, 3, 0, 0, 4, 80, 9, 0, 85, 15, 24, 11…\n$ url       <chr> \"https://www.reddit.com/r/ABCDesis/comments/x6oivc/what_are_…\n$ type      <chr> \"hot\", \"hot\", \"hot\", \"hot\", \"hot\", \"hot\", \"hot\", \"hot\", \"hot…\n```\n:::\n\n```{.r .cell-code}\n# remove 'subreddit' column.\nreddit_posts <- reddit_posts %>% select (-c(subreddit))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `select()`:\n! Can't subset columns that don't exist.\n✖ Column `subreddit` doesn't exist.\n```\n:::\n\n```{.r .cell-code}\n# remove html elements from 'title' column.\n# reddit_posts$title <- vectorized_htmldecode(reddit_posts$title)\n\n# remove html elements from 'text' column.\n# reddit_posts$text <- vectorized_htmldecode(reddit_posts$text)\n\n# save the finalised posts object.\n# saveRDS(reddit_posts, \"reddit_posts_final.rds\")\n\n# re-load the object.\n# reddit_posts_final <- read_rds(\"reddit_posts_final.rds\")\n```\n:::\n\n\n## Reddit: Text Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create 'quanteda' corpus. \nreddit_corpus <- corpus(reddit_comments_final$comment)\n\n# use same list of stopwords as oral histories.\nto_keep <- c(\"do\", \"does\", \"did\", \"would\", \"should\", \"could\", \"ought\", \"isn't\", \"aren't\", \"wasn't\", \"weren't\", \"hasn't\", \"haven't\", \"hadn't\", \"doesn't\", \"don't\", \"didn't\", \"won't\", \"wouldn't\", \"shan't\", \"shouldn't\", \"can't\", \"cannot\", \"couldn't\", \"mustn't\", \"because\", \"against\", \"between\", \"into\", \"through\", \"during\", \"before\", \"after\", \"above\", \"below\", \"over\", \"under\", \"no\", \"nor\", \"not\")\nStopwords <- stopwords(\"en\")\nStopwords <- Stopwords[!(Stopwords %in% to_keep)]\n\n# create tokens, remove punctuation, numbers, symbols and stopwords, then convert to lowercase.\nreddit_tokens <- tokens(reddit_corpus, remove_punct = T, remove_numbers = T, remove_symbols = T)\nreddit_tokens <- tokens_select(reddit_tokens, pattern = Stopwords, selection = \"remove\")\nreddit_tokens <- tokens_tolower(reddit_tokens)\n\n# remove tokens that appear in wordcloud that are not too meaningful.\nreddit_tokens <- tokens_remove(reddit_tokens, c(\"m\", \"s\", \"say\", \"see\", \"make\", \"way\", \"well\", \"many\", \"someone\", \"never\", \"still\", \"now\", \"go\", \"thing\", \"things\", \"know\", \"think\", \"also\", \"said\", \"going\", \"want\", \"t\", \"one\", \"lot\", \"much\", \"even\", \"really\", \"sure\", \"yeah\", \"look\", \"always\", \"something\", \"re\", \"actually\", \"get\", \"got\", \"though\", \"take\", \"etc\", \"can\", \"like\", \"don\", \"saying\"))\n\n# get summary of corpus.\nreddit_summary <- summary(reddit_corpus)\n\n# create wordcloud with modified data.\nreddit_dfm <- reddit_tokens %>% dfm() %>% dfm_remove(stopwords(\"en\"))\ntextplot_wordcloud(reddit_dfm, max_words = 50, color=\"purple\")\n```\n\n::: {.cell-output-display}\n![](Post4_Saaradhaa_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# create fcm.\nreddit_fcm <- fcm(reddit_dfm)\n\n# keep only top features.\nsmall_reddit_fcm <- fcm_select(reddit_fcm, pattern = names(topfeatures(reddit_fcm, 50)), selection = \"keep\")\n\n# compute weights.\nsize <- log(colSums(small_reddit_fcm))\n\n# create network.\ntextplot_network(small_reddit_fcm, vertex_size = size / max(size) * 4)\n```\n\n::: {.cell-output-display}\n![](Post4_Saaradhaa_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\n\nThe wordcloud and network plot allow me to confirm that this subreddit indeed discusses South Asian culture, hence making it a good comparison with the oral histories data. We can also see that the younger generation has concerns specific to their age group - such as with dating and relationships, a wider range of ethnic and national groups (Asians, Black people, White people, British, etc), racism (which was not in the text plots for the older generation) and even caste concerns. This gives me some idea of how the values and concerns of South Asians have changed over time, which is my first research question.\n\n## Comparing the Two Datasets\n\nI will attempt to use str_match() to compare how many times 'culture' appears in the oral histories vs. Reddit data (as a proportion of the total number of tokens).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# compute proportions for reddit data.\nsum(str_count(reddit_tokens, \"[cC]ultur\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8047\n```\n:::\n\n```{.r .cell-code}\nsum(ntoken(reddit_tokens))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2029966\n```\n:::\n\n```{.r .cell-code}\n# compute proportions for oral histories.\nsum(str_count(oh_tokens, \"[cC]ultur\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 502\n```\n:::\n\n```{.r .cell-code}\nsum(ntoken(oh_tokens))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 206015\n```\n:::\n\n```{.r .cell-code}\n# test proportions.\nprop.test(x = c(8047, 502), n = c(2029966, 206015), p = NULL, alternative = \"two.sided\", correct = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\t2-sample test for equality of proportions with continuity correction\n\ndata:  c(8047, 502) out of c(2029966, 206015)\nX-squared = 114.16, df = 1, p-value < 2.2e-16\nalternative hypothesis: two.sided\n95 percent confidence interval:\n 0.00129494 0.00175984\nsample estimates:\n     prop 1      prop 2 \n0.003964106 0.002436716 \n```\n:::\n\n```{.r .cell-code}\n# save.image(\"post4_saaradhaa.RData\")\n```\n:::\n\n\nInteresting - the younger generation referenced culture significantly more than the older generation did.\n\n## Moving Forward\n\nThis is my tentative plan for the next two posts, which I might revise depending on time constraints.\n\n-   Post 5: try Personal Values Dictionary on oral histories and Reddit data.\n\n-   Post 6: do topic modelling on oral histories and Reddit data.\n",
    "supporting": [
      "Post4_Saaradhaa_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}