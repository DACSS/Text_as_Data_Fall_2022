{
  "hash": "f609c9f9a7e1ddcdd1248fd063e5cd92",
  "result": {
    "markdown": "---\ntitle: \"Blog 3- Semantic Network Analysis\"\nauthor: \"Rhowena Vespa\"\ndesription: \"TF-IDF/ dfm/Sematic Network Visualization\"\ndate: \"10/16/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - Blog 3\n  - Rhowena Vespa\n  - Semantic Network Analysis\n  - Twitter\n  - TF-IDF\n  - dfm\n  - Text representation\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(quanteda)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nPackage version: 3.2.3\nUnicode version: 13.0\nICU version: 69.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nParallel computing: 8 of 8 threads used.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSee https://quanteda.io for tutorials and examples.\n```\n:::\n\n```{.r .cell-code}\nlibrary(quanteda.textstats)\nlibrary(quanteda.textplots)\nlibrary(ggplot2)\nlibrary(DT)\nlibrary(tm)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: NLP\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'NLP'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    annotate\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:quanteda':\n\n    meta, meta<-\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tm'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:quanteda':\n\n    stopwords\n```\n:::\n\n```{.r .cell-code}\nlibrary(stringr)\n```\n:::\n\n\nThis 3rd Blog uses text representation concepts from week 6. Using tweet replies as corpus,\nI will apply document-feature matrix and term-co-occurence matrix to better undersatnd the relationships of the texts.\nI will also apply TF-IDF: Term Frequency-Inverse Document Frequency to rank the words by frequency.\nData visualization of the semantic network to understand what words co-occur with one another.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in data\n\nIRA<- read_csv(\"IRA_med.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 9497 Columns: 79\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(34): edit_history_tweet_ids, text, lang, source, reply_settings, entit... dbl\n(18): id, conversation_id, referenced_tweets.replied_to.id, referenced_... lgl\n(23): referenced_tweets.retweeted.id, edit_controls.is_edit_eligible, r... dttm\n(4): edit_controls.editable_until, created_at, author.created_at, __tw...\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...79`\n```\n:::\n\n```{.r .cell-code}\n#remove @twitter handles\nIRA$text <- gsub(\"@[[:alpha:]]*\",\"\", IRA$text) #remove Twitter handles\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_corpus <- corpus(IRA,text_field = \"text\")   \n```\n:::\n\n\n#tokenize and stemming\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_tokens <- tokens(IRA_corpus)\nIRA_tokens <- tokens_wordstem(IRA_tokens)\n```\n:::\n\n# Locate keywords in text\nI played around with this and compared results from keywords :\"inflation\", \"pharma\", and \"price\".\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_kw <- kwic(IRA_tokens, pattern =  \"price*\", window = 3,\n  valuetype = c(\"glob\", \"regex\", \"fixed\"),\n  separator = \" \",\n  case_insensitive = TRUE,\n  index = NULL) \nhead(IRA_kw, 5) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\nKeyword-in-context with 5 matches.                                                              \n   [text2, 10]    see those cheap | price | on my prescript   \n  [text22, 16]       the US allow | price | goug. That        \n   [text49, 6]   that these lower | price | aren't lower price\n   [text49, 9] price aren't lower | price | ?? You'r          \n [text117, 18]          HIGH. Gas | price | in CA are         \n```\n:::\n:::\n\n#TF-IDF rank words by term frequency\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_dfm <- tokens(IRA_corpus, remove_punct = TRUE, remove_numbers = TRUE, remove_symbols = TRUE, remove_url=TRUE) %>%  \n  tokens_remove (stopwords(\"en\")) %>%\n  dfm()\ntopfeatures(IRA_dfm) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      big inflation    pharma         n    people     biden      lost  american \n     1307      1225      1174       873       822       485       467       456 \n      act      will \n      438       433 \n```\n:::\n:::\n\n\n#rank words by TF-IDF\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_dfm <- dfm_tfidf(IRA_dfm) \ntopfeatures(IRA_dfm) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\ninflation       big    pharma         n    people     biden      lost  american \n1199.1418 1193.4589 1108.9193 1058.6552  901.0779  648.4959  618.0324  611.9988 \n     will       act \n 609.2498  599.6485 \n```\n:::\n:::\n\n\n\n#Keyness analysis as an alternative to tf-idf\nI grouped the responses as based on possible sensitivity of the tweet replies. \nThe possibly sensitive =TRUE replies \"keywords\" compared to the associations and a reference group of possible_sensitive= FALSE group replies,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_dfm <- tokens(IRA_corpus, remove_punct = TRUE, remove_numbers = TRUE, remove_symbols = TRUE, remove_url=TRUE) %>%\n  dfm() %>%\n  dfm_group(groups = possibly_sensitive)  \n\nIRAkey <- textstat_keyness(IRA_dfm, target = \"TRUE\")\ntextplot_keyness(IRAkey,\n  show_reference = TRUE,\n  show_legend = TRUE,\n  n = 20L,\n  min_count = 2L,\n  margin = 0.05,\n  color = c(\"darkblue\", \"red\"),\n  labelcolor = \"gray30\",\n  labelsize = 4,\n  font = NULL\n)\n```\n\n::: {.cell-output-display}\n![](Blog3_IRA_Vespa_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n# DFM that contains hashtags \n\n::: {.cell}\n\n```{.r .cell-code}\nIRAtag_dfm <- dfm_select(IRA_dfm, pattern = \"#*\")\nIRAtoptag <- names(topfeatures(IRA_dfm, 50)) \nhead(IRAtoptag)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"the\" \"you\" \"to\"  \"and\" \"a\"   \"is\" \n```\n:::\n:::\n\n\n#Feature-occurrence matrix of hashtags\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRAtag_fcm <- fcm(IRA_dfm)\nhead(IRAtag_fcm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nFeature co-occurrence matrix of: 6 by 11,231 features.\n        features\nfeatures     so   when     do      i    get      to    see  those cheap prices\n    so   119805 172481 222460 433651 143080 1315660  87710  55862  4900 133770\n    when      0  61776 159808 311521 102784  945130  63008  40130  3520  96096\n    do        0      0 102831 401790 132568 1218990  81266  51756  4540 123942\n    i         0      0      0 391170 258420 2376235 158415 100892  8850 241605\n    get       0      0      0      0  42486  784020  52268  33288  2920  79716\n    to        0      0      0      0      0 3603315 480615 306110 26850 733005\n[ reached max_nfeat ... 11,221 more features ]\n```\n:::\n:::\n\n\n#Visualization of semantic network based on hashtag co-occurrence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRAtopgat_fcm <- fcm_select(IRAtag_fcm, pattern = IRAtoptag)\ntextplot_network(IRAtopgat_fcm, min_freq = 0.5,\n  omit_isolated = TRUE,\n  edge_color = \"#1F78B4\",\n  edge_alpha = 0.5,\n  edge_size = 2,\n  vertex_color = \"#4D4D4D\",\n  vertex_size = 2,\n  vertex_labelcolor = NULL,\n  vertex_labelfont = NULL,\n  vertex_labelsize = 5,\n  offset = NULL)\n```\n\n::: {.cell-output-display}\n![](Blog3_IRA_Vespa_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Blog3_IRA_Vespa_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}