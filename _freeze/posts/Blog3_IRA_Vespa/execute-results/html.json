{
  "hash": "f609c9f9a7e1ddcdd1248fd063e5cd92",
  "result": {
    "markdown": "---\ntitle: \"Blog 3- Semantic Network Analysis\"\nauthor: \"Rhowena Vespa\"\ndesription: \"TF-IDF/ dfm/Sematic Network Visualization\"\ndate: \"10/16/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - Blog 3\n  - Rhowena Vespa\n  - Semantic Network Analysis\n  - Twitter\n  - TF-IDF\n  - dfm\n  - Text representation\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: package or namespace load failed for 'readr' in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]):\n namespace 'rlang' 1.0.4 is already loaded, but >= 1.0.6 is required\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: package or namespace load failed for 'dplyr' in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]):\n namespace 'rlang' 1.0.4 is already loaded, but >= 1.0.6 is required\n```\n:::\n\n```{.r .cell-code}\nlibrary(quanteda)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nPackage version: 3.2.3\nUnicode version: 13.0\nICU version: 69.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nParallel computing: 8 of 8 threads used.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSee https://quanteda.io for tutorials and examples.\n```\n:::\n\n```{.r .cell-code}\nlibrary(quanteda.textstats)\nlibrary(quanteda.textplots)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: package or namespace load failed for 'quanteda.textplots' in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]):\n namespace 'rlang' 1.0.4 is already loaded, but >= 1.0.6 is required\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError: package or namespace load failed for 'ggplot2' in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]):\n namespace 'rlang' 1.0.4 is already loaded, but >= 1.0.6 is required\n```\n:::\n\n```{.r .cell-code}\nlibrary(DT)\nlibrary(tm)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: NLP\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'NLP'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:quanteda':\n\n    meta, meta<-\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tm'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:quanteda':\n\n    stopwords\n```\n:::\n\n```{.r .cell-code}\nlibrary(stringr)\n```\n:::\n\n\nThis 3rd Blog uses text representation concepts from week 6. Using tweet replies as corpus,\nI will apply document-feature matrix and term-co-occurence matrix to better undersatnd the relationships of the texts.\nI will also apply TF-IDF: Term Frequency-Inverse Document Frequency to rank the words by frequency.\nData visualization of the semantic network to understand what words co-occur with one another.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in data\n\nIRA<- read_csv(\"IRA_med.csv\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in read_csv(\"IRA_med.csv\"): could not find function \"read_csv\"\n```\n:::\n\n```{.r .cell-code}\n#remove @twitter handles\nIRA$text <- gsub(\"@[[:alpha:]]*\",\"\", IRA$text) #remove Twitter handles\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.factor(x): object 'IRA' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_corpus <- corpus(IRA,text_field = \"text\")   \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in corpus(IRA, text_field = \"text\"): object 'IRA' not found\n```\n:::\n:::\n\n\n#tokenize and stemming\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_tokens <- tokens(IRA_corpus)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in tokens(IRA_corpus): object 'IRA_corpus' not found\n```\n:::\n\n```{.r .cell-code}\nIRA_tokens <- tokens_wordstem(IRA_tokens)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in tokens_wordstem(IRA_tokens): object 'IRA_tokens' not found\n```\n:::\n:::\n\n# Locate keywords in text\nI played around with this and compared results from keywords :\"inflation\", \"pharma\", and \"price\".\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_kw <- kwic(IRA_tokens, pattern =  \"price*\", window = 3,\n  valuetype = c(\"glob\", \"regex\", \"fixed\"),\n  separator = \" \",\n  case_insensitive = TRUE,\n  index = NULL) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in kwic(IRA_tokens, pattern = \"price*\", window = 3, valuetype = c(\"glob\", : object 'IRA_tokens' not found\n```\n:::\n\n```{.r .cell-code}\nhead(IRA_kw, 5) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(IRA_kw, 5): object 'IRA_kw' not found\n```\n:::\n:::\n\n#TF-IDF rank words by term frequency\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_dfm <- tokens(IRA_corpus, remove_punct = TRUE, remove_numbers = TRUE, remove_symbols = TRUE, remove_url=TRUE) %>%  \n  tokens_remove (stopwords(\"en\")) %>%\n  dfm()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in tokens(IRA_corpus, remove_punct = TRUE, remove_numbers = TRUE, : object 'IRA_corpus' not found\n```\n:::\n\n```{.r .cell-code}\ntopfeatures(IRA_dfm) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in topfeatures(IRA_dfm): object 'IRA_dfm' not found\n```\n:::\n:::\n\n\n#rank words by TF-IDF\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_dfm <- dfm_tfidf(IRA_dfm) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in dfm_tfidf(IRA_dfm): object 'IRA_dfm' not found\n```\n:::\n\n```{.r .cell-code}\ntopfeatures(IRA_dfm) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in topfeatures(IRA_dfm): object 'IRA_dfm' not found\n```\n:::\n:::\n\n\n\n#Keyness analysis as an alternative to tf-idf\nI grouped the responses as based on possible sensitivity of the tweet replies. \nThe possibly sensitive =TRUE replies \"keywords\" compared to the associations and a reference group of possible_sensitive= FALSE group replies,\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRA_dfm <- tokens(IRA_corpus, remove_punct = TRUE, remove_numbers = TRUE, remove_symbols = TRUE, remove_url=TRUE) %>%\n  dfm() %>%\n  dfm_group(groups = possibly_sensitive)  \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in tokens(IRA_corpus, remove_punct = TRUE, remove_numbers = TRUE, : object 'IRA_corpus' not found\n```\n:::\n\n```{.r .cell-code}\nIRAkey <- textstat_keyness(IRA_dfm, target = \"TRUE\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in textstat_keyness(IRA_dfm, target = \"TRUE\"): object 'IRA_dfm' not found\n```\n:::\n\n```{.r .cell-code}\ntextplot_keyness(IRAkey,\n  show_reference = TRUE,\n  show_legend = TRUE,\n  n = 20L,\n  min_count = 2L,\n  margin = 0.05,\n  color = c(\"darkblue\", \"red\"),\n  labelcolor = \"gray30\",\n  labelsize = 4,\n  font = NULL\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in textplot_keyness(IRAkey, show_reference = TRUE, show_legend = TRUE, : could not find function \"textplot_keyness\"\n```\n:::\n:::\n\n# DFM that contains hashtags \n\n::: {.cell}\n\n```{.r .cell-code}\nIRAtag_dfm <- dfm_select(IRA_dfm, pattern = \"#*\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in dfm_select(IRA_dfm, pattern = \"#*\"): object 'IRA_dfm' not found\n```\n:::\n\n```{.r .cell-code}\nIRAtoptag <- names(topfeatures(IRA_dfm, 50)) \n```\n\n::: {.cell-output .cell-output-error}\n```\nError in topfeatures(IRA_dfm, 50): object 'IRA_dfm' not found\n```\n:::\n\n```{.r .cell-code}\nhead(IRAtoptag)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(IRAtoptag): object 'IRAtoptag' not found\n```\n:::\n:::\n\n\n#Feature-occurrence matrix of hashtags\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRAtag_fcm <- fcm(IRA_dfm)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in fcm(IRA_dfm): object 'IRA_dfm' not found\n```\n:::\n\n```{.r .cell-code}\nhead(IRAtag_fcm)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in head(IRAtag_fcm): object 'IRAtag_fcm' not found\n```\n:::\n:::\n\n\n#Visualization of semantic network based on hashtag co-occurrence\n\n\n::: {.cell}\n\n```{.r .cell-code}\nIRAtopgat_fcm <- fcm_select(IRAtag_fcm, pattern = IRAtoptag)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in fcm_select(IRAtag_fcm, pattern = IRAtoptag): object 'IRAtag_fcm' not found\n```\n:::\n\n```{.r .cell-code}\ntextplot_network(IRAtopgat_fcm, min_freq = 0.5,\n  omit_isolated = TRUE,\n  edge_color = \"#1F78B4\",\n  edge_alpha = 0.5,\n  edge_size = 2,\n  vertex_color = \"#4D4D4D\",\n  vertex_size = 2,\n  vertex_labelcolor = NULL,\n  vertex_labelfont = NULL,\n  vertex_labelsize = 5,\n  offset = NULL)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in textplot_network(IRAtopgat_fcm, min_freq = 0.5, omit_isolated = TRUE, : could not find function \"textplot_network\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}