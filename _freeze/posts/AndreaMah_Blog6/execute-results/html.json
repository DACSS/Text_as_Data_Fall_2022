{
  "hash": "1cfdd0ec71a04e07b1edcb821f637b15",
  "result": {
    "markdown": "---\ntitle: \"Blog Post 6: Structural Topic Modeling\"\nauthor: \"Andrea Mah\"\ndesription: \"Topic modeling of speeches\"\ndate: \"12/02/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - BlogPost6\n  - Andrea Mah\n\n---\n\n\n\nBased on suggestions from Prof Song,I used strucutural topic modelling on my data. Structural topic models should allow me to test the association between topics and document metadata. In my case, I have three metadata variables to look at: year of speech, Climate Risk Index (CRI) and income level of a given country. To do this, I planned to use the stm package, using the Roberts et al. paper as a guide.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#strucutral topic modeling\n#loading in nececssary libraries\nlibrary(quanteda)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nPackage version: 3.2.3\nUnicode version: 13.0\nICU version: 69.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nParallel computing: 8 of 8 threads used.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nSee https://quanteda.io for tutorials and examples.\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'ggplot2' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(text2vec)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'text2vec' was built under R version 4.2.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(stopwords)\nlibrary(RCurl)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'RCurl'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:tidyr':\n\n    complete\n```\n:::\n\n```{.r .cell-code}\n#install.packages('stm')\nlibrary(stm)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'stm' was built under R version 4.2.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nstm v1.3.6 successfully loaded. See ?stm for help. \n Papers, resources, and other materials at structuraltopicmodel.com\n```\n:::\n\n```{.r .cell-code}\n#load in data/ \nspeech.meta <- read.csv('FINAL_combined_meta-text_dataset.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in file(file, \"rt\"): cannot open file 'FINAL_combined_meta-\ntext_dataset.csv': No such file or directory\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in file(file, \"rt\"): cannot open the connection\n```\n:::\n\n```{.r .cell-code}\nspeech.meta$income <- as.factor(speech.meta$income)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in is.factor(x): object 'speech.meta' not found\n```\n:::\n\n```{.r .cell-code}\nlevels(speech.meta$income)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in levels(speech.meta$income): object 'speech.meta' not found\n```\n:::\n\n```{.r .cell-code}\nspeech.meta$incNum <- recode(speech.meta$income, \"High income\" = 4, \"Upper middle income\" = 3, \"Lower middle income\" = 2, \"Low income\" = 1)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in recode(speech.meta$income, `High income` = 4, `Upper middle income` = 3, : object 'speech.meta' not found\n```\n:::\n\n```{.r .cell-code}\nspeech.meta$incNum\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'speech.meta' not found\n```\n:::\n:::\n\n\nAfter loading in the data, and creating a numeric income metadata variable \n(although it isn't a true continuous scale, it helps with interpretation to use \nthis kind of ordinal recoding to understand, roughly, the relationships between\nincome levevl and topics...) I started processing the data for use with stm package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#process the data for use with stm package\nprocessed <- textProcessor(speech.meta$text_field, metadata = speech.meta)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in textProcessor(speech.meta$text_field, metadata = speech.meta): object 'speech.meta' not found\n```\n:::\n\n```{.r .cell-code}\nout <- prepDocuments(processed$documents, processed$vocab, processed$meta)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in prepDocuments(processed$documents, processed$vocab, processed$meta): object 'processed' not found\n```\n:::\n\n```{.r .cell-code}\ndocs <- out$documents\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'out' not found\n```\n:::\n\n```{.r .cell-code}\nvocab <- out$vocab\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'out' not found\n```\n:::\n\n```{.r .cell-code}\nmeta <- out$meta\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'out' not found\n```\n:::\n:::\n\nAfter doing this initial processing, I realized I needed to limit my corpus to \ndocuments which had my covariates... thus:\n\n::: {.cell}\n\n```{.r .cell-code}\n#process the data for use with stm package, limiting to only speeches\n#from countries with an associated CRI\nspeech.meta <- subset(speech.meta, !(is.na(CRI)))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in subset(speech.meta, !(is.na(CRI))): object 'speech.meta' not found\n```\n:::\n\n```{.r .cell-code}\nspeech.meta.cri <- subset(speech.meta, !(is.na(incNum)))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in subset(speech.meta, !(is.na(incNum))): object 'speech.meta' not found\n```\n:::\n\n```{.r .cell-code}\ntail(speech.meta.cri)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in tail(speech.meta.cri): object 'speech.meta.cri' not found\n```\n:::\n\n```{.r .cell-code}\nprocessed <- textProcessor(speech.meta.cri$text_field, metadata = speech.meta.cri)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in textProcessor(speech.meta.cri$text_field, metadata = speech.meta.cri): object 'speech.meta.cri' not found\n```\n:::\n\n```{.r .cell-code}\nout <- prepDocuments(processed$documents, processed$vocab, processed$meta)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in prepDocuments(processed$documents, processed$vocab, processed$meta): object 'processed' not found\n```\n:::\n\n```{.r .cell-code}\ndocs <- out$documents\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'out' not found\n```\n:::\n\n```{.r .cell-code}\nvocab <- out$vocab\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'out' not found\n```\n:::\n\n```{.r .cell-code}\nmeta <- out$meta\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'out' not found\n```\n:::\n:::\n\n\nNext, I tried running strucutral topic models using a variety of the methods \npresented in the Roberts paper:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstm.cri <- stm(documents = out$documents, vocab = out$vocab,\n               K = 20, prevalence = ~ CRI +income + year, data = out$meta,\n               init.type = \"Spectral\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in asSTMCorpus(documents, vocab, data): object 'out' not found\n```\n:::\n\n```{.r .cell-code}\nstm.cri.Select <- selectModel(documents = out$documents, vocab = out$vocab,\n               K = 20, prevalence = ~ CRI + year + income, data = out$meta,\n               runs = 20, seed = 11112)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nCasting net \n1 models in net \n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in asSTMCorpus(documents, vocab, data): object 'out' not found\n```\n:::\n\n```{.r .cell-code}\n#plot the models\nplotModels(stm.cri.Select, pch = c(1, 2, 3, 4, 5, 6, 7, 8, 9))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plotModels(stm.cri.Select, pch = c(1, 2, 3, 4, 5, 6, 7, 8, 9)): object 'stm.cri.Select' not found\n```\n:::\n\n```{.r .cell-code}\nselected.cri <- stm.cri.Select$runout[[1]]\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'stm.cri.Select' not found\n```\n:::\n\n```{.r .cell-code}\nsummary(selected.cri)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(selected.cri): object 'selected.cri' not found\n```\n:::\n:::\n\n\nI used the searchK function to compare models with different numbers of topics. Based\non my previous exploration and use of LDA, I thought that k between 3 and 10 would likely\nbe sufficient... \n\n```{r{}}\n#SearchK function to determine  potential number of topics\n#I wanted to test between 3 and 10 topics. I think 20 (which I looked at\n#in the select function) was too many topics.\nstorage <- searchK(out$documents, out$vocab, K = c(3:10), \n                   prevalence =~ CRI + year + income, data = meta)\n\n#now I want to examine the results of the search K... \nplot.searchK(storage)\n\nresults <- as.data.frame(storage$results)\n\nView(results)\n```\n\nAfter running this, I was= looking for the following criteria:\n#higher semantic coherene\n#high held-out likelihood\n#low residual\n#low lower bound\n\niven the plots, I think that maybe a model with three, four or five topics could be best?\nok, so given that I am thinking that three or four or five topics seems to fit criteria\n\nI then ran models with each number of topics. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nstm.cri3 <- stm(documents = out$documents, vocab = out$vocab,\n                K = 3, prevalence =~ CRI + year + income, data = out$meta,\n                init.type = \"Spectral\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in asSTMCorpus(documents, vocab, data): object 'out' not found\n```\n:::\n\n```{.r .cell-code}\nstm.cri4 <- stm(documents = out$documents, vocab = out$vocab,\n                K = 4, prevalence = ~ CRI + year + incNum, data = out$meta,\n                init.type = \"Spectral\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in asSTMCorpus(documents, vocab, data): object 'out' not found\n```\n:::\n\n```{.r .cell-code}\nstm.cri5 <- stm(documents = out$documents, vocab = out$vocab,\n                K = 5, prevalence = ~ CRI + year + income, data = out$meta,\n                init.type = \"Spectral\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in asSTMCorpus(documents, vocab, data): object 'out' not found\n```\n:::\n:::\n\n\nThen, I wanted to think about labeling these... After looking at three, four, and\nfive-topic models, I decided to proceed with the four-topic model.\n\nLabels based on FREX were a bit strange...Mostly country names. \n#1: nepal_namibia_malawi_zambia_vietnam\n#2: bonn_group_complianc_bueno_china\n#3: tuvalu_copenhagen_island_australia_barbado\n#4: comment_geneva_consumpt_albania_effici\n\nperhaps labels with probability are better: \n#1: climat, chang, develop, countri, adapt\n#2: parti, convent, develop, countri, protocol\n#3: climate, will, chang, countri, must, develop\n#4: energi, develop, countri, emiss, climat\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlabelTopics(stm.cri3)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in labelTopics(stm.cri3): object 'stm.cri3' not found\n```\n:::\n\n```{.r .cell-code}\nsageLabels(stm.cri3)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in sageLabels(stm.cri3): object 'stm.cri3' not found\n```\n:::\n\n```{.r .cell-code}\nlabelTopics(stm.cri4)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in labelTopics(stm.cri4): object 'stm.cri4' not found\n```\n:::\n\n```{.r .cell-code}\nlabelTopics(stm.cri5)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in labelTopics(stm.cri5): object 'stm.cri5' not found\n```\n:::\n\n```{.r .cell-code}\n#Topic 1 Top Words:\n # Highest Prob: climat, chang, develop, countri, presid, adapt, nation \n#FREX: napa, namibia, malawi, nepal, zambia, vietnam, african \n#Topic 2 Top Words:\n # Highest Prob: parti, develop, convent, protocol, countri, kyoto, presid \n#FREX: bonn, group, bueno, china, complianc, protocol, kyoto \n#Topic 3 Top Words:\n # Highest Prob: develop, climat, chang, countri, technolog, will, emiss \n#FREX: vision, poznan, market, australia, partnership, key, invest \n#Topic 4 Top Words:\n # Highest Prob: countri, emiss, energi, develop, climat, convent, chang \n#FREX: latvia, turkey, geneva, comment, agbm, lithuania, berlin \n#Topic 5 Top Words:\n#  Highest Prob: will, climat, world, countri, chang, must, island \n#FREX: tuvalu, barbado, solomon, island, fiji, reef, children \n\nsageLabels(stm.cri4)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in sageLabels(stm.cri4): object 'stm.cri4' not found\n```\n:::\n:::\n\n\nNext I plotted more graphs looking at topic proportion:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#getting the graphical display of estimated topic proportions\nplot(stm.cri4, type = \"summary\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(stm.cri4, type = \"summary\"): object 'stm.cri4' not found\n```\n:::\n:::\n\n\nProceeding with 4 topics, I wanted to look at my covariates in relation to topics. \nAs a reminder, these covariates were income classification of the country, climate\nrisk index, and year of speech.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Checking\nprep <- estimateEffect(1:4 ~ CRI + year + incNum, stm.cri4,\n                       meta = out$meta, uncertainty = \"Global\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in estimateEffect(1:4 ~ CRI + year + incNum, stm.cri4, meta = out$meta, : object 'out' not found\n```\n:::\n\n```{.r .cell-code}\n#looking at the relationship between covariates and these four topics;\nsummary(prep, topics = c(1,2,3,4))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in summary(prep, topics = c(1, 2, 3, 4)): object 'prep' not found\n```\n:::\n:::\n\nInterestingly, CRI did not seem to be a predictor of any topic. year and income were. \nI looked at a plot of income plotted against topic prevalence:\n#1 = low income, 2 = lower middle income, 3 = upper middle income, 4 = high income\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(prep, covariate = \"incNum\", topics = c(1:4), model = stm.cri4)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(prep, covariate = \"incNum\", topics = c(1:4), model = stm.cri4): object 'prep' not found\n```\n:::\n:::\n\n\nNot completely sure I set this up right, but here I looked at expected topic proportion over time (by year)\nStrangely, topic 2 decreased over time, while 4 increased. Topic 1 remained relatively stable, Topic 2 slightly increased\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(prep, \"year\", method = \"continuous\", topics = c(1:4))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(prep, \"year\", method = \"continuous\", topics = c(1:4)): object 'prep' not found\n```\n:::\n:::\n\n\nTo remind myself of topic 2, I looked at the top words... \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Topic 2:\nlabelTopics(stm.cri4)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in labelTopics(stm.cri4): object 'stm.cri4' not found\n```\n:::\n\n```{.r .cell-code}\n#Topic 2 Top Words:\n#Highest Prob: countri, develop, emiss, convent, climat, chang, energi \n#FREX: kazakhstan, romania, croatia, latvia, berlin, japan, geneva \n#Lift: absorpt, achi, acti, additon, adriat, aerosol, afterward \n#Score: romania, berlin, latvia, croatia, energi, implement, aij \n```\n:::\n\n\nTo compare this topic to others, I used\ntopical contrasts between topic 2 and other topics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(stm.cri4, type = \"perspectives\", topics = c(1,2), xlim = c(0.1, 0.9))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(stm.cri4, type = \"perspectives\", topics = c(1, 2), xlim = c(0.1, : object 'stm.cri4' not found\n```\n:::\n\n```{.r .cell-code}\nplot(stm.cri4, type = \"perspectives\", topics = c(2,3), xlim = c(0.1, 0.9))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(stm.cri4, type = \"perspectives\", topics = c(2, 3), xlim = c(0.1, : object 'stm.cri4' not found\n```\n:::\n\n```{.r .cell-code}\nplot(stm.cri4, type = \"perspectives\", topics = c(2,4), xlim = c(0.1, 0.9))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in plot(stm.cri4, type = \"perspectives\", topics = c(2, 4), xlim = c(0.1, : object 'stm.cri4' not found\n```\n:::\n:::\n\n\nFinally, I looked at word clouds for each topic. I was hoping I could use the \npackage grid or gridExtra to combine these four into one graphic, but I guess\nthey were not the right kind of object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop1 <- cloud(stm.cri4, topic = 1, scale = c(3, .3))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in cloud(stm.cri4, topic = 1, scale = c(3, 0.3)): object 'stm.cri4' not found\n```\n:::\n\n```{.r .cell-code}\ntop2 <- cloud(stm.cri4, topic = 2, scale = c(3, .3))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in cloud(stm.cri4, topic = 2, scale = c(3, 0.3)): object 'stm.cri4' not found\n```\n:::\n\n```{.r .cell-code}\ntop3 <- cloud(stm.cri4, topic = 3, scale = c(3, .3))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in cloud(stm.cri4, topic = 3, scale = c(3, 0.3)): object 'stm.cri4' not found\n```\n:::\n\n```{.r .cell-code}\ntop4 <- cloud(stm.cri4, topic = 4, scale = c(3, .3))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in cloud(stm.cri4, topic = 4, scale = c(3, 0.3)): object 'stm.cri4' not found\n```\n:::\n:::\n\n\nI think this was a very interesting exercise, but I am definitely lacking confidence\nin interpretation of various outputs from structural topic modeling. I want to spend\nmore time working with the package in the future. From these explorations, I \ndon't know that I have a good understanding of waht characterizes each of the four\nextracted topics. I think I would need to spend more time closely examining each one\nto identify what the latent ideas are for each topic. \n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}